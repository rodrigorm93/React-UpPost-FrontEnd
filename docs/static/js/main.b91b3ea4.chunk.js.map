{"version":3,"sources":["hooks/useForm.js","types/types.js","helpers/fetch.js","action/auth.js","components/login/LoginScreen.js","action/ui.js","components/register/RegisterScreen.js","components/card-boostrap/CardApp.js","components/posted/PostEntry.js","action/post.js","components/posted/PostEntrySelect.js","components/posted/DetailPostScreen.js","components/posted/DetailPost.js","routers/AuthRouter.js","components/posted/AddPost.js","components/posted/PostMyEntry.js","components/posted/ViewMyPost.js","components/posted/EditPost.js","routers/DashboardRoutePrivate.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/carousels/CarouselsApp.js","components/posted/PostedEntries.js","components/footer/FooterApp.js","components/topMenu/MenuPosted.js","routers/AppRouter.js","reducers/authReducer.js","reducers/postReducer.js","reducers/uiReducer.js","reducers/dataFetchReducer.js","store/store.js","PostApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","login","logout","authChekingFinish","authLogout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","postsAddNew","postsActive","postsDesactive","postsLoad","postFinishLoading","postNumberPage","postsClear","postsLoadUltimosPost","postFinishLoadingPages","postFinishLoadingSearch","postUpdated","stateDelete","notesUpdate","notesFileUrl","postDelete","notesLogoutCleaning","postUpCorrect","resetPagination","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","fetchConTokenUpload","file","archivo","FormData","append","fetchLoginGoogle","idtoken","checkinFinish","type","loginBackend","user","payload","LoginScreen","dispatch","useDispatch","loading","useSelector","state","ui","auth","email","password","formValues","responseGoogle","response","idToken","id_token","tokenId","a","resp","json","ok","setItem","Date","getTime","uid","console","log","className","to","onSubmit","e","preventDefault","Swal","fire","msg","startLogin","placeholder","autoComplete","onChange","disabled","clientId","buttonText","onSuccess","onFailure","cookiePolicy","setError","err","RegisterScreen","msgError","nameLogin","password2","isFormValid","trim","length","validator","isEmail","startRegister","CardApp","title","id","descripcion","urlImg","img","urlVideoState","newDate","variant","src","alt","controls","format","PostEntry","date","urlVideo","momente","setUrlVideoState","useEffect","checkinFinishSearch","estado","checkinFinishPagination","numMaxPage","number","StartLoadingPostsByCategoria","category","postSelec","index","posts","categoria","tipo","respImg","bodyImg","push","StartLoadingMyPosts","idUser","_id","StartDetailPosts","PostDeleteOkay","msj","postAddNew","newPost","LoadingPosts","LoadingUltimosPosts","PostUp","PostEntrySelect","categoryid","useParams","dataFetch","isLoading","didCancel","results","startSelectCategory","Spinner","animation","gutter","align","map","post","key","span","justify","DetailPostScreen","props","Card","bg","text","border","Header","Title","Img","config","language","height","width","readOnly","DetailPost","startDetail","AuthRouter","exact","path","component","AddPost","selection","setSelection","setBody","setfile","Form","dateCreation","fileup","getState","respUploadImg","bodyUploadImg","clave","errors","icon","eventStartAddNew","Label","Control","size","Group","controlId","as","rows","editor","getData","custom","onClick","files","PostMyEntry","Body","Footer","activePost","SettingFilled","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteImg","bodyDeleteImg","eventStartDelete","DeleteFilled","ViewMyPost","deletePost","startSelectMyPost","EditPost","active","setUrlVideo","bodyPost","postEdit","idImg","eventStartUpdate","DashboardRoutePrivate","PrivateRoute","isAuthenticated","Component","rest","PublicRoute","isAuthenticate","prototype","PropTypes","bool","isRequired","func","CarouselsApp","ultimosPost","Carousel","Item","Caption","PostedEntries","pages","loadingPostPagination","loadingPostSearch","pagination","setPagination","page","numberPages","Math","round","offset","StartLoadingPostsSearch","defaultCurrent","total","current","defaultPageSize","FooterApp","Layout","MenuPosted","SubMenu","Menu","theme","mode","HomeOutlined","activeClassName","VideoCameraOutlined","CameraOutlined","UserOutlined","clear","Content","AppRouter","checking","checkingLoadPosts","isError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","notesDelete","filter","store","createStore","applyMiddleware","thunk","PostApp","ReactDOM","render","document","getElementById"],"mappings":"yRAEaA,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAChBC,mBAASD,GADO,mBACrCE,EADqC,KAC7BC,EAD6B,KAGtCC,EAAQ,WACZD,EAAUH,IAGNK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BH,EAAU,2BACLD,GADI,kBAENI,EAAOC,KAAOD,EAAOE,UAI1B,MAAO,CAACN,EAAQG,EAAmBD,I,wBChBxBK,EAAQ,CACnBC,MAAO,eACPC,OAAQ,gBACRC,kBAAmB,qCACnBC,WAAY,gBAEZC,WAAY,iBACZC,cAAe,oBAEfC,eAAgB,qBAChBC,gBAAiB,sBAEjBC,YAAa,mBACbC,YAAa,2BACbC,eAAgB,8BAChBC,UAAW,+BACXC,kBAAmB,+BACnBC,eAAgB,kCAChBC,WAAY,0BACZC,qBAAsB,kCACtBC,uBAAwB,6CACxBC,wBAAyB,8BAEzBC,YAAa,sBACbC,YAAa,uCAEbC,YAAa,sBACbC,aAAc,2BACdC,WAAY,sBACZC,oBAAqB,0BACrBC,cAAe,0CAEfC,gBAAiB,kDC1BbC,EAAUC,2CACVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACKE,MAAMD,GAGNC,MAAMD,EAAK,CAChBD,SACAG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,MAKrBQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAMN,EAAN,YAAiBG,GAGpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACKE,MAAMD,EAAK,CAChBD,SACAG,QAAS,CACP,UAAWK,KAKRN,MAAMD,EAAK,CAChBD,SACAG,QAAS,CACP,eAAgB,mBAChB,UAAWK,GAEbJ,KAAMC,KAAKC,UAAUP,MAKrBY,EAAsB,SAACb,EAAUc,GACrC,IAAMX,EAAG,UAAMN,EAAN,YAAiBG,GAMpBe,EAAU,IAAIC,SAIpB,OAHAD,EAAQE,OAAO,QAASH,EAAK,IAGtBV,MAAMD,EAAK,CAChBD,OAAQ,MAERI,KAAMS,KAIJG,EAAmB,SAACR,GACxB,IAAMP,EAAG,UAAMN,EAAN,gBACT,OAAOO,MAAMD,EAAK,CAChBD,OAAQ,OACRG,QAAS,CACP,eAAgB,mBAChBc,QAAST,M,iBCCTU,EAAgB,iBAAO,CAC3BC,KAAMnD,EAAMG,oBAGRiD,EAAe,SAACC,GAAD,MAAW,CAC9BF,KAAMnD,EAAMC,MACZqD,QAASD,IAULnD,EAAS,iBAAO,CACpBiD,KAAMnD,EAAMI,a,SCpFDmD,EAAc,WACzB,IAAMC,EAAWC,cACTC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAzCH,QACA5D,EAAS6D,aAAY,SAACC,GAAD,OAAWA,EAAME,QAAtChE,KAHuB,EAKSR,EAAQ,CAC9CyE,MAAO,sBACPC,SAAU,WAPmB,mBAKxBC,EALwB,KAKZrE,EALY,KASvBmE,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SASTE,EAAiB,SAACC,GACtB,IDO6BC,ECPzBC,EAAWF,EAASG,QAExBd,GDK6BY,ECLHC,EDM5B,uCAAO,WAAOb,GAAP,iBAAAe,EAAA,sEACcvB,EAAiBoB,GAD/B,cACCI,EADD,gBAEcA,EAAKC,OAFnB,QAECrC,EAFD,QAIIsC,KACPjC,aAAakC,QAAQ,QAASvC,EAAKI,OACnCC,aAAakC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrB,EACEJ,EAAa,CACX0B,IAAK1C,EAAK0C,IACVhF,KAAMsC,EAAKtC,SAXZ,2CAAP,wDCJEiF,QAAQC,IAAIX,IAGd,OACE,oCACE,yBAAKY,UAAU,cACb,yBAAKA,UAAU,uBACZnF,GAAQ,kBAAC,IAAD,CAAUoF,GAAG,MACtB,wBAAID,UAAU,eAAd,SAEA,0BAAME,SAtBM,SAACC,GACnBA,EAAEC,iBAEF7B,EDXsB,SAACO,EAAOC,GAChC,8CAAO,WAAOR,GAAP,iBAAAe,EAAA,sEACc1C,EAAc,OAAQ,CAAEkC,QAAOC,YAAY,QADzD,cACCQ,EADD,gBAEcA,EAAKC,OAFnB,OAECrC,EAFD,OAIL2C,QAAQC,IAAI5C,GAERA,EAAKsC,IACPjC,aAAakC,QAAQ,QAASvC,EAAKI,OACnCC,aAAakC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrB,EACEJ,EAAa,CACX0B,IAAK1C,EAAK0C,IACVhF,KAAMsC,EAAKtC,SAIfwF,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,SAjB1B,2CAAP,sDCUWC,CAAW1B,EAAOC,MAoBnB,2BACEb,KAAK,OACLuC,YAAY,QACZ5F,KAAK,QACLmF,UAAU,cACVU,aAAa,MACb5F,MAAOgE,EACP6B,SAAUhG,IAGZ,2BACEuD,KAAK,WACLuC,YAAY,WACZ5F,KAAK,WACLmF,UAAU,cACVlF,MAAOiE,EACP4B,SAAUhG,IAGZ,4BACEuD,KAAK,SACL8B,UAAU,4BACVY,SAAUnC,GAHZ,SAQA,yBAAKuB,UAAU,yBACb,yDACA,kBAAC,cAAD,CACEa,SAAS,2EACTC,WAAW,QACXC,UAAW9B,EACX+B,UAAW/B,EACXgC,aAAc,wBAIlB,kBAAC,IAAD,CAAMhB,GAAG,YAAYD,UAAU,QAA/B,2BC9ECkB,EAAW,SAACC,GAAD,MAAU,CAChCjD,KAAMnD,EAAMK,WACZiD,QAAS8C,I,kBCKEC,EAAiB,WAC5B,IAAM7C,EAAWC,cACT6C,EAAa3C,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAA1CyC,SACMC,EAAc5C,aAAY,SAACC,GAAD,OAAWA,EAAME,QAAjDhE,KAH0B,EAKMR,EAAQ,CAC9CQ,KAAM,WACNiE,MAAO,kBACPC,SAAU,SACVwC,UAAW,WATqB,mBAK3BvC,EAL2B,KAKfrE,EALe,KAY1BE,EAAqCmE,EAArCnE,KAAMiE,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAUwC,EAAcvC,EAAduC,UAUzBC,EAAc,WAClB,OAA2B,IAAvB3G,EAAK4G,OAAOC,QACdnD,EAAS2C,EAAS,sBACX,GACGS,IAAUC,QAAQ9C,GAGnBC,IAAawC,GAAaxC,EAAS2C,OAAS,GACrDnD,EACE2C,EACE,mEAGG,IAGT3C,EDxC8B,CAChCL,KAAMnD,EAAMM,iBCwCH,IAZLkD,EAAS2C,EAAS,wBACX,IAcX,OACE,oCACE,yBAAKlB,UAAU,cACb,yBAAKA,UAAU,uBACZsB,GAAa,kBAAC,IAAD,CAAUrB,GAAG,MAC3B,wBAAID,UAAU,eAAd,YAECqB,GAAY,yBAAKrB,UAAU,qBAAqBqB,GAEjD,0BAAMnB,SArCS,SAACC,GACtBA,EAAEC,iBAEEoB,KACFjD,EHoEuB,SAACO,EAAOC,EAAUlE,GAC7C,8CAAO,WAAO0D,GAAP,iBAAAe,EAAA,sEACc1C,EACjB,WACA,CAAEkC,QAAOC,WAAUlE,QACnB,QAJG,cACC0E,EADD,gBAMcA,EAAKC,OANnB,QAMCrC,EAND,QAQIsC,IACPjC,aAAakC,QAAQ,QAASvC,EAAKI,OACnCC,aAAakC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrB,EACEJ,EAAa,CACX0B,IAAK1C,EAAK0C,IACVhF,KAAMsC,EAAKtC,SAIfwF,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,SAnB1B,2CAAP,sDGrEasB,CAAc/C,EAAOC,EAAUlE,MAkCjCwG,GAAY,yBAAKrB,UAAU,qBAAqBqB,GAEjD,2BACEnD,KAAK,OACLuC,YAAY,OACZ5F,KAAK,OACLmF,UAAU,cACVU,aAAa,MACb5F,MAAOD,EACP8F,SAAUhG,IAGZ,2BACEuD,KAAK,OACLuC,YAAY,QACZ5F,KAAK,QACLmF,UAAU,cACVU,aAAa,MACb5F,MAAOgE,EACP6B,SAAUhG,IAGZ,2BACEuD,KAAK,WACLuC,YAAY,WACZ5F,KAAK,WACLmF,UAAU,cACVlF,MAAOiE,EACP4B,SAAUhG,IAGZ,2BACEuD,KAAK,WACLuC,YAAY,mBACZ5F,KAAK,YACLmF,UAAU,cACVlF,MAAOyG,EACPZ,SAAUhG,IAGZ,4BAAQuD,KAAK,SAAS8B,UAAU,kCAAhC,iB,kCCjGC8B,EAAU,SAAC,GASjB,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,GACAC,EAMI,EANJA,YACAC,EAKI,EALJA,OACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,cACAhE,EAEI,EAFJA,KACAiE,EACI,EADJA,QAQA,OACE,yBAAKL,GAAG,0BACN,yBAAKhC,UAAU,aACb,yBAAKA,UAAU,OACb,6BACE,kBAAC,IAAD,CAAMC,GAAE,0BAAqB+B,IAC3B,yBAAKhC,UAAU,cACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACVmC,EACD,yBACEnC,UAAU,gBACVsC,QAAQ,MACRC,IAAKL,EACLM,IAAKpE,EAAKvD,OAGZ,kBAAC,IAAD,CACEmF,UAAU,oBACVhD,IAAKoF,EACLK,UAAU,KAKhB,yBAAKzC,UAAU,kBACb,4BAAK+B,GACL,2BAAIE,GACJ,+BAAKI,EAAQK,OAAO,cAEpB,mCAAStE,EAAKvD,eC7CrB8H,EAAY,SAAC,GAUnB,IATLX,EASI,EATJA,GAEAC,GAOI,EARJpH,KAQI,EAPJoH,aACAF,EAMI,EANJA,MACAa,EAKI,EALJA,KACAC,EAII,EAJJA,SACAX,EAGI,EAHJA,OACAC,EAEI,EAFJA,IACA/D,EACI,EADJA,KAEMiE,EAAUS,IAAQF,GADpB,EAEsCrI,mBAAS,MAF/C,mBAEG6H,EAFH,KAEkBW,EAFlB,KASJ,OALAC,qBAAU,WACRD,EAAiB,GAAD,OAAIF,MACnB,CAACA,IAIF,oCACE,kBAAC,EAAD,CACEd,MAAOA,EACPC,GAAIA,EACJC,YAAaA,EACbC,OAAQA,EACRE,cAAeA,EACfhE,KAAMA,EACN+D,IAAKA,EACLE,QAASA,M,mCC2IXY,EAAsB,SAACC,GAAD,MAAa,CACvChF,KAAMnD,EAAMkB,wBACZoC,QAAS6E,IAqCLC,EAA0B,SAACD,GAAD,MAAa,CAC3ChF,KAAMnD,EAAMiB,uBACZqC,QAAS6E,IA4DLE,EAAa,SAACC,GAAD,MAAa,CAC9BnF,KAAMnD,EAAMc,eACZwC,QAAS,CAAEgF,YAGAC,EAA4B,uCAAG,WAAOC,GAAP,yBAAAjE,EAAA,+EAQrB1C,EAAc,SARO,cAQlC2C,EARkC,gBASrBA,EAAKC,OATgB,UASlCrC,EATkC,OAUpCqG,EAAY,IAEZrG,EAAKsC,GAZ+B,iBAa7BgE,EAAQ,EAbqB,aAalBA,EAAQtG,EAAKuG,MAAMhC,QAbD,oBAchCvE,EAAKuG,MAAMD,GAAOE,UAAUC,OAASL,EAdL,kCAelB3G,EAAc,uBAAD,OACJO,EAAKuG,MAAMD,GAAOtB,MAhBT,eAelC0B,EAfkC,iBAmBlBA,EAAQ7G,IAnBU,QAmBlC8G,EAnBkC,OAqBlC3G,EAAKuG,MAAMD,GAAOvB,OAAS4B,EAE3BN,EAAUO,KAAK5G,EAAKuG,MAAMD,IAvBQ,QAaSA,IAbT,iDA+BjCD,GA/BiC,kCAiCxC1D,QAAQC,IAAR,MAjCwC,0DAAH,sDAqC5BiE,EAAmB,uCAAG,WAAOC,GAAP,yBAAA3E,EAAA,+EAQZ1C,EAAc,SARF,cAQzB2C,EARyB,gBASZA,EAAKC,OATO,UASzBrC,EATyB,OAW3BqG,EAAY,IAEZrG,EAAKsC,GAbsB,iBAcpBgE,EAAQ,EAdY,aAcTA,EAAQtG,EAAKuG,MAAMhC,QAdV,oBAevBvE,EAAKuG,MAAMD,GAAOrF,KAAK8F,MAAQD,EAfR,qBAgBrB9G,EAAKuG,MAAMD,GAAOtB,IAhBG,kCAiBPvF,EAAc,uBAAD,OACJO,EAAKuG,MAAMD,GAAOtB,MAlBpB,eAiBvB0B,EAjBuB,iBAoBPA,EAAQ7G,IApBD,QAoBvB8G,EApBuB,OAsBvB3G,EAAKuG,MAAMD,GAAOvB,OAAS4B,EAtBJ,QAyBzBN,EAAUO,KAAK5G,EAAKuG,MAAMD,IAzBD,QAckBA,IAdlB,iDAiCxBD,GAjCwB,kCAmC/B1D,QAAQC,IAAR,MAnC+B,0DAAH,sDAwCnBoE,EAAgB,uCAAG,WAAOnC,GAAP,uBAAA1C,EAAA,sEAQxBkE,EAAY,GARY,SAST5G,EAAc,qBAAD,OAAsBoF,IAT1B,cAStBzC,EATsB,gBAUTA,EAAKC,OAVI,YAUtBrC,EAVsB,QAYnBsC,KAAQtC,EAAKuG,MAAMvB,IAZA,kCAaVvF,EAAc,uBAAD,OAAwBO,EAAKuG,MAAMvB,MAbtC,eAa1B0B,EAb0B,iBAeVA,EAAQ7G,IAfE,QAe1B8G,EAf0B,OAiB1B3G,EAAKuG,MAAMxB,OAAS4B,EAjBM,eAsB5BN,EAAUO,KAAK5G,EAAKuG,OAtBQ,kBAwBrBF,GAxBqB,kCA4B5B1D,QAAQC,IAAR,MA5B4B,0DAAH,sDAsIvBqE,EAAiB,SAACpC,EAAIqC,GAAL,MAAc,CACnCnG,KAAMnD,EAAMoB,YACZkC,QAAS,CACP2D,KACAqC,SAkBEpG,EAAgB,iBAAO,CAC3BC,KAAMnD,EAAMa,oBAGD0I,EAAa,SAACC,GAAD,MAAc,CACtCrG,KAAMnD,EAAMS,YACZ6C,QAASkG,IAGLC,EAAe,SAACd,GAAD,MAAY,CAC/BxF,KAAMnD,EAAMY,UACZ0C,QAASqF,IAGLe,GAAsB,SAACf,GAAD,MAAY,CACtCxF,KAAMnD,EAAMgB,qBACZsC,QAASqF,IAGEgB,GAAS,SAAC1C,EAAIqC,GAAL,MAAc,CAClCnG,KAAMnD,EAAMyB,cACZ6B,QAAS,CACP2D,KACAqC,SC7gBSM,GAAkB,WAAO,IAC5BC,EAAeC,cAAfD,WAD2B,EAEPlG,aAAY,SAACC,GAAD,OAAWA,EAAMmG,aAAjDhI,EAF2B,EAE3BA,KAAMiI,EAFqB,EAErBA,UACRxG,EAAWC,cAyBjB,OAvBAwE,qBAAU,WACR,IAAIgC,GAAY,EAiBhB,OAhByB,uCAAG,4BAAA1F,EAAA,6DAC1Bf,EAAS,CAAEL,KAAM,eADS,kBAIFoF,EAA6BsB,GAJ3B,OAIlBK,EAJkB,OAMnBD,GACHzG,EAAS,CAAEL,KAAM,gBAAiBG,QAAS4G,IAPrB,gDAUnBD,GACHzG,EAAS,CAAEL,KAAM,kBAXK,yDAAH,oDAezBgH,GACO,WACLF,GAAY,KAEb,CAACzG,EAAUqG,IAGZ,oCACGG,EACC,oCACE,yBAAK/E,UAAU,WACb,kBAACmF,EAAA,EAAD,CAASC,UAAU,SAAS9C,QAAQ,WAIxC,oCACE,kBAAC,IAAD,CACEtC,UAAU,6CACVqF,OAAQ,CAAC,GAAI,IACbC,MAAM,UAELxI,EAAK4E,OAAS,EACb,oCACG5E,EAAKyI,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CAAKC,IAAKD,EAAKxD,GAAIhC,UAAU,sBAC3B,kBAAC,EAAD,iBAAewF,EAAf,CAAqBC,IAAKD,EAAKxD,WAKrC,kBAAC,IAAD,CAAKhC,UAAU,YAAY0F,KAAM,IAC/B,kBAAC,IAAD,QAIN,kBAAC,IAAD,CAAK1F,UAAU,iBAAiB2F,QAAQ,UACtC,kBAAC,IAAD,CAAKD,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,Q,8BC7DVE,GAAmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACHtL,mBAAS,IADN,mBACtC6H,EADsC,KACvBW,EADuB,KAGrChB,EAAkC8D,EAAlC9D,MAAOG,EAA2B2D,EAA3B3D,OAAQW,EAAmBgD,EAAnBhD,SAAU1F,EAAS0I,EAAT1I,KAOjC,OALA6F,qBAAU,WACRD,EAAiB,GAAD,OAAIF,MACnB,CAACA,IAIF,oCACE,kBAAC,IAAD,CACE8C,QAAQ,eACRL,MAAM,SACNtF,UAAU,mDAEV,kBAAC,IAAD,CAAK0F,KAAM,GAAI1F,UAAU,cACvB,kBAAC8F,GAAA,EAAD,CACE9F,UAAU,iCACV+F,GAAI,QACJC,KAAM,OACNC,OAAO,SAEP,kBAACH,GAAA,EAAKI,OAAN,CAAalG,UAAU,eACrB,kBAAC8F,GAAA,EAAKK,MAAN,CAAYnG,UAAU,cAAc+B,GACjCc,EACD,kBAAC,IAAD,CACE7C,UAAU,eACVhD,IAAKoF,EACLK,UAAU,IAGZ,kBAACqD,GAAA,EAAKM,IAAN,CAAUpG,UAAU,WAAWsC,QAAQ,MAAMC,IAAKL,KAItD,kBAAC,KAAD,CACEmE,OAAQ,CACNC,SAAU,KACVC,OAAQ,OACRC,MAAO,QAETC,UAAU,EACV3J,KAAMK,KAIV,4BAAQ6C,UAAU,mBAItB,kBAAC,IAAD,QCrDO0G,GAAa,WAAO,IAAD,EACFhI,aAAY,SAACC,GAAD,OAAWA,EAAMmG,aAAjDhI,EADsB,EACtBA,KAAMiI,EADgB,EAChBA,UACRxG,EAAWC,cAETwD,EAAO6C,cAAP7C,GAyBR,OAvBAgB,qBAAU,WACR,IAAIgC,GAAY,EAiBhB,OAhBiB,uCAAG,4BAAA1F,EAAA,6DAClBf,EAAS,CAAEL,KAAM,eADC,kBAIMiG,EAAiBnC,GAJvB,OAIViD,EAJU,OAMXD,GACHzG,EAAS,CAAEL,KAAM,gBAAiBG,QAAS4G,IAP7B,gDAUXD,GACHzG,EAAS,CAAEL,KAAM,kBAXH,yDAAH,oDAejByI,GACO,WACL3B,GAAY,KAEb,CAACzG,EAAUyD,IAGZ,6BACE,oCACG+C,EACC,oCACE,yBAAK/E,UAAU,WACb,kBAACmF,EAAA,EAAD,CAASC,UAAU,SAAS9C,QAAQ,WAIxC,6BACE,kBAAC,GAAD,CAAkBuD,MAAO/I,EAAK,SCxC7B8J,GAAa,WACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWzI,IAE7C,kBAAC,IAAD,CAAOuI,OAAK,EAACC,KAAK,mBAAmBC,UAAW3F,IAEhD,kBAAC,IAAD,CACEyF,OAAK,EACLC,KAAK,+BACLC,UAAWpC,KAGb,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,sBAAsBC,UAAWL,KAEnD,kBAAC,IAAD,CAAUzG,GAAG,Q,UCbN+G,GAAU,WACrB,IAAMzI,EAAWC,cADU,EAOOjE,mBAAS,UAPhB,mBAOpB0M,EAPoB,KAOTC,EAPS,OASH3M,mBAAS,CAC/BuC,KAAM,KAVmB,mBASpBK,EAToB,KASdgK,EATc,OAaa9M,EAAQ,CAC9C0H,MAAO,GACPE,YAAa,GACbY,SAAU,KAhBe,mBAapB7D,EAboB,KAaRrE,EAbQ,KAmBnBoH,EAAiC/C,EAAjC+C,MAAOE,EAA0BjD,EAA1BiD,YAAaY,EAAa7D,EAAb6D,SAnBD,EAqBHtI,oBAAS,GArBN,mBAqBpBoD,EArBoB,KAqBdyJ,EArBc,KAgE3B,OACE,yBAAKpH,UAAU,+CACb,kBAAC,IAAD,CAAK2F,QAAQ,eAAeL,MAAM,UAChC,kBAAC,IAAD,CAAKI,KAAM,IACT,wBAAI1F,UAAU,kBAAd,YAEA,kBAACqH,GAAA,EAAD,CAAMnH,SA5CO,SAACC,GAEpB,IAAIqF,EADJrF,EAAEC,iBAIAoF,EADI3C,EACG,CACLd,QACA5E,KAAMA,EAAKL,KACXmF,cACA0B,UAAWsD,EACXK,aAAc,IAAI3H,KAClBkD,YAGK,CACLd,QACA5E,KAAMA,EAAKL,KACXmF,cACAqF,aAAc,IAAI3H,KAClBgE,UAAWsD,GAIf1I,ELhD4B,SAACiH,EAAM+B,GACrC,8CAAO,WAAOhJ,EAAUiJ,GAAjB,+BAAAlI,EAAA,+DACiBkI,IAAW3I,KAAzBgB,EADH,EACGA,IAAKhF,EADR,EACQA,KAEU,WAAnB2K,EAAK7B,UACP6B,EAAK7B,UAAY,2BACW,UAAnB6B,EAAK7B,YACd6B,EAAK7B,UAAY,4BANd,kBAUgBrG,EAAc,QAASkI,EAAM,QAV7C,cAUGjG,EAVH,gBAWgBA,EAAKC,OAXrB,UAWGrC,EAXH,OAeH2C,QAAQC,IAAIwH,IAERpK,EAAKsC,KAAM8H,EAjBZ,kCAkB2B7J,EAAoB,gBAAD,OAC7BP,EAAKqI,KAAKxD,IAC1BuF,GApBD,eAkBKE,EAlBL,iBAuBqBA,EAAcjI,OAvBnC,QAuBDkI,EAvBC,OAyBDlC,EAAKxD,GAAK7E,EAAKqI,KAAKxD,GACpBwD,EAAKpH,KAAO,CACV8F,IAAKrE,EACLhF,KAAMA,EACNsH,IAAKuF,EAAcvF,KA7BpB,wBA+BI,GAAIhF,EAAKsC,GACd+F,EAAKxD,GAAK7E,EAAKqI,KAAKxD,GACpBwD,EAAKpH,KAAO,CACV8F,IAAKrE,EACLhF,KAAMA,OAKL,CAGH,IAAS8M,KAFLtG,EAAW,GAEGlE,EAAKyK,OAKrBvG,EAAS0C,KAAK5G,EAAKyK,OAAOD,GAAZ,KAGhBtH,IAAKC,KAAK,CACRuH,KAAM,QACN9F,MAAO,UACPiE,KAAM3E,EAAS,KAtDhB,QA0DS,4BACZhB,IAAKC,KAAK,QAASnD,EAAKqI,KAAKzD,MAAO,WAIpCxD,EAAS+F,EAAWkB,IAEpBjH,EAASmG,GAPG,8BA1DT,kDAmEH5E,QAAQC,IAAR,MAnEG,0DAAP,wDK+CW+H,CAAiBtC,EAAM7H,IAEhCyJ,GAAQ,KAoBA,kBAACC,GAAA,EAAKU,MAAN,gBACA,kBAACV,GAAA,EAAKW,QAAN,CACEC,KAAK,KACL/J,KAAK,OACLrD,KAAK,QACL4F,YAAY,QACZ3F,MAAOiH,EACPpB,SAAUhG,IAEZ,kBAAC0M,GAAA,EAAKa,MAAN,CAAYC,UAAU,gCACpB,kBAACd,GAAA,EAAKU,MAAN,wBACA,kBAACV,GAAA,EAAKW,QAAN,CACEI,GAAG,WACHC,KAAK,IACLxN,KAAK,cACL4F,YAAY,cACZ3F,MAAOmH,EACPtB,SAAUhG,IAGZ,6BACA,kBAAC0M,GAAA,EAAKU,MAAN,mBACA,kBAAC,KAAD,CAAUjL,KAAMK,EAAKL,KAAM6D,SAvCX,SAACR,GAC3BgH,EAAQ,CACNrK,KAAMqD,EAAEmI,OAAOC,gBAuCT,kBAAClB,GAAA,EAAKU,MAAN,kBACA,kBAACV,GAAA,EAAKW,QAAN,CACEI,GAAG,SACHpI,UAAU,UACVgC,GAAG,yBACHwG,QAAM,EACNC,QAzCY,SAACtI,GACvB+G,EAAa/G,EAAEvF,OAAOE,SA0CZ,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,6BApCF,IAoCS,6BACQ,WAAdmM,EACC,6BACE,2BAAO/I,KAAK,OAAO8D,GAAG,aAAarB,SAtF5B,SAACR,GACpBiH,EAAQjH,EAAEvF,OAAO8N,WAwFP,kBAACrB,GAAA,EAAKa,MAAN,CAAYC,UAAU,kBACpB,kBAACd,GAAA,EAAKU,MAAN,kBACA,kBAACV,GAAA,EAAKW,QAAN,CACE9J,KAAK,OACLrD,KAAK,WACLC,MAAO+H,EACPlC,SAAUhG,EACV8F,YAAY,qBAIlB,yBAAKT,UAAU,2BACb,4BAAQA,UAAU,gBAAgB9B,KAAK,UAAvC,iB,oBC3HDyK,GAAc,SAAC,GAUrB,IATL3G,EASI,EATJA,GACA7E,EAQI,EARJA,KACA8E,EAOI,EAPJA,YACAF,EAMI,EANJA,MACAa,EAKI,EALJA,KACAC,EAII,EAJJA,SACAX,EAGI,EAHJA,OACAC,EAEI,EAFJA,IACAwB,EACI,EADJA,UACI,EACsCpJ,mBAAS,IAD/C,mBACG6H,EADH,KACkBW,EADlB,KAEEV,EAAUS,IAAQF,GAClBrE,EAAWC,cAiBjBwE,qBAAU,WACRD,EAAiB,GAAD,OAAIF,MACnB,CAACA,IAOJ,OACE,kBAACiD,GAAA,EAAD,CAAM9F,UAAU,eACd,kBAAC8F,GAAA,EAAKI,OAAN,CAAalG,UAAU,eACrB,kBAAC8F,GAAA,EAAKK,MAAN,CAAYnG,UAAU,cAAc+B,GACjCc,EACD,kBAAC,IAAD,CACE7C,UAAU,eACVhD,IAAKoF,EACLK,UAAU,IAGZ,kBAACqD,GAAA,EAAKM,IAAN,CAAUpG,UAAU,kBAAkBsC,QAAQ,MAAMC,IAAKL,KAI7D,kBAAC4D,GAAA,EAAK8C,KAAN,KACE,kBAAC,KAAD,CACEvC,OAAQ,CACNC,SAAU,MAEZG,UAAU,EACV3J,KAAMK,KAGV,kBAAC2I,GAAA,EAAK+C,OAAN,CAAa7I,UAAU,cACpBqC,EAAQK,OAAO,aAEhB,kBAAC,IAAD,CACEzC,GAAG,oBACHD,UAAU,YACVyI,QAtDiB,WACvBlK,EN8dsB,SAACyD,EAAIwD,GAAL,MAAe,CACvCtH,KAAMnD,EAAMU,YACZ4C,QAAQ,aACN2D,MACGwD,IMjeDsD,CAAW9G,EAAI,CACbY,OACAb,QACA5E,OACA0F,WACAc,YACA1B,cACAE,MACAD,cA8CE,kBAAC6G,GAAA,EAAD,OAGF,yBAAK/I,UAAU,wBAAwByI,QAvCxB,WACnBlK,EN8Y4B,SAACiH,EAAMrD,GACrC,8CAAO,WAAO5D,GAAP,eAAAe,EAAA,sDACLQ,QAAQC,IAAIyF,EAAMrD,GAGlB9B,IAAKC,KAAK,CACRyB,MAAO,gBACPiE,KAAM,oCACN6B,KAAM,UACNmB,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,KARH,uCAQQ,WAAOC,GAAP,iBAAA/J,EAAA,0DACF+J,EAAOC,YADL,qBAEEnH,EAFF,gCAGsBvF,EAAc,uBAAD,OACZuF,GACvB,GACA,UANA,cAGIoH,EAHJ,gBASoBA,EAAU/J,OAT9B,OASFgK,EATE,OAUF1J,QAAQC,IAAIyJ,GAVV,wBAYelM,EAAc,SAAD,OAAUkI,GAAQ,GAAI,UAZlD,eAYEjG,EAZF,iBAaeA,EAAKC,OAbpB,eAcKC,KACPY,IAAKC,KAAK,WAAY,8BAA+B,WAEzC,+BAIZ/B,EAAS6F,EAJG,kCAjBV,4CARR,uDAJK,2CAAP,sDM/YWqF,CAAiBzH,EAAIG,MAuCxB,kBAACuH,GAAA,EAAD,UC9EGC,GAAa,WAAO,IAAD,EACFjL,aAAY,SAACC,GAAD,OAAWA,EAAMmG,aAAjDhI,EADsB,EACtBA,KAAMiI,EADgB,EAChBA,UACN6E,EAAelL,aAAY,SAACC,GAAD,OAAWA,EAAM+E,SAA5CkG,WACA/J,EAAQnB,aAAY,SAACC,GAAD,OAAWA,EAAME,QAArCgB,IACFtB,EAAWC,cA0BjB,OAxBAwE,qBAAU,WACR,IAAIgC,GAAY,EAkBhB,OAhBuB,uCAAG,4BAAA1F,EAAA,6DACxBf,EAAS,CAAEL,KAAM,eADO,kBAIA8F,EAAoBnE,GAJpB,OAIhBoF,EAJgB,OAMjBD,GACHzG,EAAS,CAAEL,KAAM,gBAAiBG,QAAS4G,IAPvB,gDAUjBD,GACHzG,EAAS,CAAEL,KAAM,kBAXG,yDAAH,oDAevB2L,GACO,WACL7E,GAAY,KAEb,CAAC4E,EAAYrL,EAAUsB,IAGxB,6BACGkF,EACC,yBAAK/E,UAAU,WACb,kBAACmF,EAAA,EAAD,CAASC,UAAU,SAAS9C,QAAQ,UAGtC,oCACGxF,EAAKyI,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CACEG,QAAQ,eACR3F,UAAU,oCACVsF,MAAM,SACNG,IAAKD,EAAKxD,IAEV,kBAAC,IAAD,CAAKhC,UAAU,kBAAkByF,IAAKD,EAAKxD,GAAI0D,KAAM,IACnD,kBAAC,GAAgBF,WC7CpBsE,GAAW,WACtB,IAAMvL,EAAWC,cADW,EAGJjE,oBAAS,GAHL,mBAGrBoD,EAHqB,KAGfyJ,EAHe,KAKZ5B,EAAS9G,aAAY,SAACC,GAAD,OAAWA,EAAM+E,SAA9CqG,OALoB,EAOIxP,mBAAS,MAPb,mBAOrBsI,EAPqB,KAOXmH,EAPW,KAS5BlK,QAAQC,IAAIyF,GATgB,MAWYnL,EAAQmL,GAXpB,mBAWrBxG,EAXqB,KAWTrE,EAXS,KAapBoH,EAA6B/C,EAA7B+C,MAAO5E,EAAsB6B,EAAtB7B,KAAM8E,EAAgBjD,EAAhBiD,YAbO,EAeM1H,mBAASiL,EAAK7B,UAAUC,MAf9B,mBAerBqD,EAfqB,KAeVC,EAfU,OAiBA3M,mBAAS,CACnCuC,KAAMK,IAlBoB,mBAiBrB8M,EAjBqB,KAiBX9C,EAjBW,KAsE5B,OACE,yBAAKnH,UAAU,qCACb,kBAAC,IAAD,CAAK2F,QAAQ,eAAeL,MAAM,UAChC,kBAAC,IAAD,CAAKI,KAAM,IACT,wCACA,kBAAC2B,GAAA,EAAD,CAAMnH,SArDK,SAACC,GAClB,IAAI+J,EACJ/J,EAAEC,iBAEA8J,EADIrH,EACO,CACTb,GAAIwD,EAAKxD,GACTD,QACA5E,KAAM8M,EAASnN,KACfmF,cACA0B,UAAWsD,EACXK,aAAc,IAAI3H,KAClBkD,WACAsH,MAAO3E,EAAKrD,KAGH,CACTH,GAAIwD,EAAKxD,GACTD,QACA5E,KAAM8M,EAASnN,KACfmF,cACAqF,aAAc,IAAI3H,KAClBgE,UAAWsD,EACXpE,WACAsH,MAAO3E,EAAKrD,KAIhB5D,ER4U4B,SAACiH,EAAM7H,GACrC,8CAAO,WAAOY,GAAP,yBAAAe,EAAA,yDACLQ,QAAQC,IAAIyF,GAEW,WAAnBA,EAAK7B,UACP6B,EAAK7B,UAAY,2BACW,UAAnB6B,EAAK7B,YACd6B,EAAK7B,UAAY,4BANd,UAYG6B,EAAK2E,MAZR,iCAauBvN,EAAc,uBAAD,OACZ4I,EAAK2E,OAC5B,GACA,UAhBD,cAaKZ,EAbL,gBAmBqBA,EAAU/J,OAnB/B,OAmBDgK,EAnBC,OAoBD1J,QAAQC,IAAIyJ,GAGZhE,EAAKrD,IAAM,GACXqD,EAAKtD,OAAS,GAxBb,yBA2BgB5E,EAAc,SAAD,OAAUkI,EAAKxD,IAAMwD,EAAM,OA3BxD,eA2BGjG,EA3BH,iBA4BgBA,EAAKC,OA5BrB,aA4BGrC,EA5BH,QA8BMsC,GA9BN,qBA+BG9B,EA/BH,kCAgC6BD,EAAoB,gBAAD,OAC7BP,EAAKqI,KAAKxD,IAC1BrE,GAlCH,eAgCO8J,EAhCP,iBAqCuBA,EAAcjI,OArCrC,QAqCCkI,EArCD,OAuCC5H,QAAQC,IAAI2H,GAvCb,QA0CHrH,IAAKC,KAAK,QAASnD,EAAKoD,IAAK,WAEjB,4BAEZhC,EAASmG,GAFG,8BA5CT,4GAAP,sDQ7UW0F,CAAiBF,EAAUvM,MA2B5B,kBAAC0J,GAAA,EAAKW,QAAN,CACEC,KAAK,KACL/J,KAAK,OACLrD,KAAK,QACL4F,YAAY,QACZ3F,MAAOiH,EACPpB,SAAUhG,IAEZ,kBAAC0M,GAAA,EAAKa,MAAN,CAAYC,UAAU,gCACpB,kBAACd,GAAA,EAAKU,MAAN,uBACA,kBAACV,GAAA,EAAKW,QAAN,CACEI,GAAG,WACHC,KAAK,IACLxN,KAAK,cACLC,MAAOmH,EACPtB,SAAUhG,KAGd,kBAAC,KAAD,CACE0L,OAAQ,CACNC,SAAU,MAEZ3F,SA9CgB,SAACR,GAC3BgH,EAAQ,CACNrK,KAAMqD,EAAEmI,OAAOC,aA6CPzL,KAAMmN,EAASnN,OAEjB,kBAACuK,GAAA,EAAKU,MAAN,kBACA,kBAACV,GAAA,EAAKW,QAAN,CACEI,GAAG,SACHpI,UAAU,UACVgC,GAAG,yBACHwG,QAAM,EACNC,QAjDY,SAACtI,GACvB+G,EAAa/G,EAAEvF,OAAOE,SAkDZ,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEF,6BArCF,IAqCS,6BACQ,WAAdmM,EACC,2BAAO/I,KAAK,OAAO8D,GAAG,aAAarB,SApD1B,SAACR,GACpBiH,EAAQjH,EAAEvF,OAAO8N,UAqDP,kBAACrB,GAAA,EAAKa,MAAN,CAAYC,UAAU,kBACpB,kBAACd,GAAA,EAAKU,MAAN,kBACA,kBAACV,GAAA,EAAKW,QAAN,CACE9J,KAAK,OACLrD,KAAK,WACLC,MAAO+H,EACPlC,SAxDS,SAACR,GACxB6J,EAAY7J,EAAEvF,OAAOE,QAwDP2F,YAAY,qBAIlB,4BAAQvC,KAAK,UAAb,gBChICmM,GAAwB,WAAM,MAElB3L,aAAY,SAACC,GAAD,OAAWA,EAAM+E,SAA5CqG,EAFiC,EAEjCA,OAAQtK,EAFyB,EAEzBA,GAChB,OACE,kBAAC,IAAD,KACGA,EACC,kBAAC,IAAD,CAAUQ,GAAG,MAEb,kBAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,qBAAqBC,UAAWC,KAGpD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,oBAAoBC,UAAW4C,KAEhDI,EACC,kBAAC,IAAD,CAAOlD,OAAK,EAACC,KAAK,oBAAoBC,UAAW+C,KAEjD,kBAAC,IAAD,CAAU7J,GAAG,Q,SClBRqK,GAAe,SAAC,GAItB,IAHLC,EAGI,EAHJA,gBACWC,EAEP,EAFJzD,UACG0D,EACC,gDACJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEE1D,UAAW,SAAClB,GAAD,OACT0E,EACE,kBAACC,EAAc3E,GAEf,kBAAC,IAAD,CAAU5F,GAAG,uB,oBCbVyK,GAAc,SAAC,GAIrB,IAHLC,EAGI,EAHJA,eACWH,EAEP,EAFJzD,UACG0D,EACC,+CAEJ,OACE,kBAAC,IAAD,iBACMA,EADN,CAEE1D,UACE,SAAClB,GAAD,OACE8E,EAAiB,kBAAC,IAAD,CAAU1K,GAAG,MAAS,kBAACuK,EAAc3E,QAShE6E,GAAYE,UAAY,CACtBD,eAAgBE,KAAUC,KAAKC,WAC/BhE,UAAW8D,KAAUG,KAAKD,Y,kCCtBfE,GAAe,WAAO,IACZvH,EAAUhF,aAAY,SAACC,GAAD,OAAWA,EAAM+E,SAApDwH,YAER,OACE,oCACE,kBAACC,GAAA,EAAD,CAAUnL,UAAU,iBACjB0D,EAAM6B,KAAI,SAACC,GAAD,OACT,kBAAC2F,GAAA,EAASC,KAAV,CAAe3F,IAAKD,EAAKxD,IACtBwD,EAAKtD,OACJ,yBACElC,UAAU,gBACVuC,IAAKiD,EAAKtD,OACVM,IAAI,gBAGN,yBACExC,UAAU,gBACVuC,IAAI,yEACJC,IAAI,gBAIR,kBAAC2I,GAAA,EAASE,QAAV,KACE,4BAAK7F,EAAKzD,OACV,2BAAIyD,EAAKvD,qBCbVqJ,GAAgB,WAC3B,IAAM/M,EAAWC,cADgB,EAO7BE,aAAY,SAACC,GAAD,OAAWA,EAAM+E,SAJ/BA,EAH+B,EAG/BA,MACA6H,EAJ+B,EAI/BA,MACAC,EAL+B,EAK/BA,sBACAC,EAN+B,EAM/BA,kBAN+B,EAQGlR,mBAAS,GARZ,mBAQ1BmR,EAR0B,KAQdC,EARc,KAejC3I,qBAAU,WboJ+B,IAAC4I,EanJxCrN,Eb4fgC,CAClCL,KAAMnD,EAAMW,eACZ2C,QAAS,Ka7fPE,EAAS,CAAEL,KAAM,gBAIjBK,EbuNF,uCAAO,WAAOA,GAAP,mBAAAe,EAAA,+EAEgB1C,EAAc,yBAAD,OACL,EADK,UApPd,IAkPf,cAEG2C,EAFH,gBAKgBA,EAAKC,OALrB,QAKGrC,EALH,QAQMsC,KAEP4D,EAASlG,EAAK0O,YA5PE,EA6PhBxI,EAASyI,KAAKC,MAAM1I,GAIpB9E,EAAS6E,EAAWC,KAfnB,kDAkBHvD,QAAQC,IAAR,MAlBG,0DAAP,uDatNExB,EboLF,uCAAO,WAAOA,GAAP,uBAAAe,EAAA,+EAOgB1C,EAAc,yBAAD,OACL,EADK,UAvNd,IAgNf,cAOG2C,EAPH,gBAUgBA,EAAKC,OAVrB,YAUGrC,EAVH,QAWMsC,GAXN,iBAYQgE,EAAQ,EAZhB,YAYmBA,EAAQtG,EAAKuG,MAAMuB,QAAQvD,QAZ9C,qBAaKvE,EAAKuG,MAAMuB,QAAQxB,GAAOtB,IAb/B,kCAemBvF,EAAc,uBAAD,OACJO,EAAKuG,MAAMuB,QAAQxB,GAAOtB,MAhBtD,eAeG0B,EAfH,iBAmBmBA,EAAQ7G,IAnB3B,QAmBG8G,EAnBH,OAqBG3G,EAAKuG,MAAMuB,QAAQxB,GAAOvB,OAAS4B,EArBtC,QAYsDL,IAZtD,uBAwBDlF,EAASkG,GAAoBtH,EAAKuG,MAAMuB,UACxC1G,EAASN,KAzBR,0DA4BH6B,QAAQC,IAAR,MA5BG,0DAAP,uDalLExB,Gb2IwCqN,Ea3IHF,Eb4IvC,uCAAO,WAAOnN,GAAP,uBAAAe,EAAA,6DACLf,EAAS4E,GAAwB,IAD5B,kBAKgBvG,EAAc,yBAAD,OACLgP,EADK,kBA/Kd,IA0Kf,cAKGrM,EALH,gBAQgBA,EAAKC,OARrB,YAQGrC,EARH,QAUMsC,GAVN,iBAWQgE,EAAQ,EAXhB,aAWmBA,EAAQtG,EAAKuG,MAAMuB,QAAQvD,QAX9C,qBAYKvE,EAAKuG,MAAMuB,QAAQxB,GAAOtB,IAZ/B,kCAamBvF,EAAc,uBAAD,OACJO,EAAKuG,MAAMuB,QAAQxB,GAAOtB,MAdtD,eAaG0B,EAbH,iBAiBmBA,EAAQ7G,IAjB3B,QAiBG8G,EAjBH,OAmBG3G,EAAKuG,MAAMuB,QAAQxB,GAAOvB,OAAS4B,EAnBtC,QAWsDL,IAXtD,wBAwBHlF,EAASiG,EAAarH,EAAKuG,MAAMuB,UACjC1G,EAAS4E,GAAwB,IACjC5E,EAASN,KA1BN,kDA4BH6B,QAAQC,IAAR,MA5BG,0DAAP,0Da3IG,CAACxB,EAAUmN,IAMd5L,QAAQC,IAAI,SAQZ,OACE,oCACGyL,EACC,yBAAKxL,UAAU,WACb,kBAACmF,EAAA,EAAD,CAASC,UAAU,SAAS9C,QAAQ,UAGtC,oCACE,kBAAC,IAAD,CAAK+C,OAAQ,CAAC,EAAG,GAAIC,MAAM,UACzB,kBAAC,IAAD,CAAKI,KAAM,IACT,kBAAC,GAAD,QAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,KAAM,GAAIsG,OAAQ,EAAGhM,UAAU,UAClC,kBAAC,KAAD,CAAOS,YAAY,YAAYE,SAtBtB,SAACR,GACpBL,QAAQC,IAAII,EAAEvF,OAAOE,OAErByD,EbkEmC,WAAsB,IAArByH,EAAoB,uDAAb,GAAI4F,EAAS,uCAC1D,8CAAO,WAAOrN,GAAP,yBAAAe,EAAA,yDACLf,EAAS0E,GAAoB,IADxB,SASE+C,EATF,iCAUYpJ,EAAc,yBAAD,OACCgP,EADD,kBAvHV,IA6Gf,cAUDrM,EAVC,gBAaYA,EAAKC,OAbjB,YAaDrC,EAbC,QAeQsC,GAfR,iBAgBUgE,EAAQ,EAhBlB,aAgBqBA,EAAQtG,EAAKuG,MAAMuB,QAAQvD,QAhBhD,qBAiBOvE,EAAKuG,MAAMuB,QAAQxB,GAAOtB,IAjBjC,kCAkBqBvF,EAAc,uBAAD,OACJO,EAAKuG,MAAMuB,QAAQxB,GAAOtB,MAnBxD,eAkBK0B,EAlBL,iBAsBqBA,EAAQ7G,IAtB7B,QAsBK8G,EAtBL,OAwBK3G,EAAKuG,MAAMuB,QAAQxB,GAAOvB,OAAS4B,EAxBxC,QAgBwDL,IAhBxD,wBA2BClF,EAASiG,EAAarH,EAAKuG,MAAMuB,UA3BlC,iDA8BYrI,EAAc,gBAAD,OAAiBoJ,IA9B1C,eA8BDzG,EA9BC,iBA+BYA,EAAKC,OA/BjB,aA+BDrC,EA/BC,QAiCQsC,GAjCR,iBAkCUgE,EAAQ,EAlClB,aAkCqBA,EAAQtG,EAAKuG,MAAMhC,QAlCxC,qBAmCOvE,EAAKuG,MAAMD,GAAOtB,IAnCzB,kCAoCqBvF,EAAc,uBAAD,OACJO,EAAKuG,MAAMD,GAAOtB,MArChD,eAoCK0B,EApCL,iBAwCqBA,EAAQ7G,IAxC7B,QAwCK8G,EAxCL,OA0CK3G,EAAKuG,MAAMD,GAAOvB,OAAS4B,EA1ChC,QAkCgDL,IAlChD,wBA8CDlF,EAASiG,EAAarH,EAAKuG,QA9C1B,QAgDHnF,EAAS0E,GAAoB,IAhD1B,kDAkDHnD,QAAQC,IAAR,MAlDG,0DAAP,sDanEWkM,CAAwB9L,EAAEvF,OAAOE,MAAO4Q,SAuB1CD,EACC,yBAAKzL,UAAU,WACb,kBAACmF,EAAA,EAAD,CAASC,UAAU,SAAS9C,QAAQ,UAGtC,kBAAC,IAAD,CACE+C,OAAQ,CAAC,GAAI,IACbC,MAAM,SACNtF,UAAU,oDAET0D,EAAM6B,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAKC,IAAKD,EAAKxD,GAAIhC,UAAU,sBAC3B,kBAAC,EAAD,iBAAewF,EAAf,CAAqBC,IAAKD,EAAKxD,WAMvC,kBAAC,IAAD,CAAKhC,UAAU,iBAAiB2F,QAAQ,UACtC,kBAAC,IAAD,CAAKD,KAAM,EAAG1F,UAAU,kBACtB,kBAAC,KAAD,CACEW,SArDG,SAACR,GAChBwL,EAAcxL,IAqDF+L,eAAgB,EAChBC,MAAOZ,EAAMlI,OACb+I,QAASV,EACTW,gBAAiB,S,UChGlB,SAASC,KAAa,IAC3BzD,EAAW0D,KAAX1D,OAER,OACE,kBAACA,EAAD,CAAQ7I,UAAU,UAChB,qDACA,+E,sDCKOwM,GAAa,WACxB,IAAMjO,EAAWC,cACT3D,EAAS6D,aAAY,SAACC,GAAD,OAAWA,EAAME,QAAtChE,KAEA4R,EAAYC,KAAZD,QACAvG,EAAWqG,KAAXrG,OAMR,OACE,kBAACA,EAAD,KACE,kBAAC,KAAD,CAAMyG,MAAM,OAAOC,KAAK,cACtB,kBAAC,KAAKxB,KAAN,CAAW3F,IAAI,OAAOoC,KAAM,kBAACgF,GAAA,EAAD,OAC1B,kBAAC,IAAD,CAASC,gBAAgB,SAASjG,OAAK,EAAC5G,GAAG,KAA3C,SAKF,kBAAC,KAAKmL,KAAN,CAAW3F,IAAI,QAAQoC,KAAM,kBAACkF,GAAA,EAAD,OAC3B,kBAAC,IAAD,CAASD,gBAAgB,SAASjG,OAAK,EAAC5G,GAAG,0BAA3C,WAKF,kBAAC,KAAKmL,KAAN,CAAW3F,IAAI,SAASoC,KAAM,kBAACmF,GAAA,EAAD,OAC5B,kBAAC,IAAD,CAASF,gBAAgB,SAASjG,OAAK,EAAC5G,GAAG,2BAA3C,aAKDpF,EACC,kBAAC4R,EAAD,CACEhH,IAAI,OACJoC,KAAM,kBAACoF,GAAA,EAAD,MACNlL,MAAOlH,EACPmF,UAAU,iBAEV,kBAAC,KAAKoL,KAAN,CAAW3F,IAAI,WACb,kBAAC,IAAD,CAASqH,gBAAgB,SAASjG,OAAK,EAAC5G,GAAG,sBAA3C,eAKF,kBAAC,KAAKmL,KAAN,CAAW3F,IAAI,YACb,kBAAC,IAAD,CAASqH,gBAAgB,SAASjG,OAAK,EAAC5G,GAAG,qBAA3C,aAKF,kBAAC,KAAKmL,KAAN,CAAW3F,IAAI,SAASgD,QA5Cd,WAClBlK,GrB+DK,SAACA,GACNf,aAAa0P,QACb3O,EAAStD,UqBtBD,WAKF,kBAAC,KAAKmQ,KAAN,CAAW3F,IAAI,QAAQzF,UAAU,iBAC/B,kBAAC,IAAD,CAAMC,GAAG,gBAAgBD,UAAU,QAAnC,aCvDJmN,GAAYZ,KAAZY,QAEKC,GAAY,WAAO,IAAD,EACH1O,aAAY,SAACC,GAAD,OAAWA,EAAME,QAA/CwO,EADqB,EACrBA,SAAUxN,EADW,EACXA,IADW,EAE2BnB,aACtD,SAACC,GAAD,OAAWA,EAAM+E,SADD4J,EAFW,EAErBD,SAA6B5N,EAFR,EAEQA,GAAImK,EAFZ,EAEYA,WAGnCrL,EAAWC,cAWjB,OAVAsB,QAAQC,IAAI,aAEZiD,qBAAU,WACRzE,EtB4BF,uCAAO,WAAOA,GAAP,iBAAAe,EAAA,sEACchC,EAAc,cAD5B,cACCiC,EADD,gBAEcA,EAAKC,OAFnB,QAECrC,EAFD,QAGIsC,IACPjC,aAAakC,QAAQ,QAASvC,EAAKI,OACnCC,aAAakC,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrB,EACEJ,EAAa,CACX0B,IAAK1C,EAAK0C,IACVhF,KAAMsC,EAAKtC,SAKf0D,EAASN,KAfN,2CAAP,uDsB1BEM,EhBmgB6B,CAC/BL,KAAMnD,EAAMe,WACZuC,QAAS,OgBlgBN,CAACE,EAAUkB,EAAImK,IAEdyD,GAAYC,EAGZ,yBAAKtN,UAAU,WACb,kBAACmF,EAAA,EAAD,CAASC,UAAU,SAAS9C,QAAQ,UAKxC,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MAEA,kBAAC6K,GAAD,CAASnN,UAAU,iDACjB,yBAAKA,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEuK,kBAAmB1K,EACnBiH,KAAK,WACLC,UAAWsD,KAEb,kBAAC,GAAD,CACEvD,KAAK,UACLC,UAAWH,GACX2D,kBAAmB1K,IAErB,kBAAC,IAAD,CAAOgH,OAAK,EAACC,KAAK,IAAIC,UAAWuE,QAKvC,kBAACgB,GAAD,S,mBC/DFhS,GAAe,CACnB+S,UAAU,G,UCDN/S,GAAe,CACnBoJ,MAAO,GACPwH,YAAa,GACbnB,OAAQ,KACRtK,GAAI,KACJ4N,UAAU,EACVzD,WAAY,KACZ4B,uBAAuB,EACvBC,mBAAmB,EACnBF,MAAO,GCTHjR,GAAe,CACnBmE,SAAS,EACT4C,SAAU,MCJN/G,GAAe,CACnByK,WAAW,EACXwI,SAAS,EACTzQ,KAAM,ICIF0Q,GACe,qBAAXC,QACNA,OAAOC,sCACTC,KAEIC,GAAWC,aAAgB,CAC/BhP,KJPyB,WAAmC,IAAlCF,EAAiC,uDAAzBrE,GAAcwT,EAAW,uCAC3D,OAAQA,EAAO5P,MACb,KAAKnD,EAAMC,MACT,OAAO,2BACF2D,GADL,IAEE0O,UAAU,GACPS,EAAOzP,SAGd,KAAKtD,EAAMG,kBACT,OAAO,2BACFyD,GADL,IAEE0O,UAAU,IAGd,KAAKtS,EAAMI,WACT,MAAO,CACLkS,UAAU,GAGd,QACE,OAAO1O,IIbXC,GFPuB,WAAmC,IAAlCD,EAAiC,uDAAzBrE,GAAcwT,EAAW,uCACzD,OAAQA,EAAO5P,MACb,KAAKnD,EAAMK,WACT,OAAO,2BACFuD,GADL,IAEE0C,SAAUyM,EAAOzP,UAGrB,KAAKtD,EAAMM,cACT,OAAO,2BACFsD,GADL,IAEE0C,SAAU,OAGd,KAAKtG,EAAMO,eACT,OAAO,2BACFqD,GADL,IAEEF,SAAS,IAGb,KAAK1D,EAAMQ,gBACT,OAAO,2BACFoD,GADL,IAEEF,SAAS,IAGb,QACE,OAAOE,IEnBX+E,MHDyB,WAAmC,IAAlC/E,EAAiC,uDAAzBrE,GAAcwT,EAAW,uCAC3D,OAAQA,EAAO5P,MACb,KAAKnD,EAAMU,YACT,OAAO,2BACFkD,GADL,IAEEoL,OAAO,eACF+D,EAAOzP,WAIhB,KAAKtD,EAAMiB,uBACT,OAAO,2BACF2C,GADL,IAEE6M,sBAAuBsC,EAAOzP,UAGlC,KAAKtD,EAAMkB,wBACT,OAAO,2BACF0C,GADL,IAEE8M,kBAAmBqC,EAAOzP,UAG9B,KAAKtD,EAAMS,YACT,OAAO,2BACFmD,GADL,IAEE+E,MAAM,GAAD,oBAAM/E,EAAM+E,OAAZ,CAAmBoK,EAAOzP,YAGnC,KAAKtD,EAAMW,eACT,OAAO,2BACFiD,GADL,IAEEoL,OAAQ,KACRtK,GAAI,OAGR,KAAK1E,EAAMe,WACT,OAAO,2BACF6C,GADL,IAEEoL,OAAQ,KACRtK,GAAI,KACJmK,WAAY,OAGhB,KAAK7O,EAAMyB,cACT,OAAO,2BACFmC,GADL,IAEEoL,OAAQ,KACRtK,GAAG,eACEqO,EAAOzP,WAIhB,KAAKtD,EAAMY,UACT,OAAO,2BACFgD,GADL,IAEE+E,MAAM,aAAKoK,EAAOzP,WAEtB,KAAKtD,EAAMgB,qBACT,OAAO,2BACF4C,GADL,IAEEuM,YAAY,aAAK4C,EAAOzP,WAG5B,KAAKtD,EAAMa,kBACT,OAAO,2BACF+C,GADL,IAEE0O,UAAU,IAGd,KAAKtS,EAAMc,eACT,OAAO,2BACF8C,GADL,IAEE4M,MAAM,eACDuC,EAAOzP,WAIhB,KAAKtD,EAAMmB,YACT,OAAO,2BACFyC,GADL,IAGE+E,MAAO/E,EAAM6G,KAAKD,KAAI,SAACpF,GAAD,OACpBA,EAAE6B,KAAO8L,EAAOzP,QAAQ2D,GAAK8L,EAAOzP,QAAU8B,OAIpD,KAAKpF,EAAMgT,YACT,OAAO,2BACFpP,GADL,IAEEoL,OAAQ,KACRrG,MAAO/E,EAAM+E,MAAMsK,QAAO,SAACxI,GAAD,OAAUA,EAAKxD,KAAO8L,EAAOzP,aAG3D,KAAKtD,EAAMoB,YACT,OAAO,2BACFwC,GADL,IAEEoL,OAAQ,KACRH,WAAW,eACNkE,EAAOzP,WAIhB,QACE,OAAOM,IGrGXmG,UDV8B,WAAmC,IAAlCnG,EAAiC,uDAAzBrE,GAAcwT,EAAW,uCAChE,OAAQA,EAAO5P,MACb,IAAK,cACH,OAAO,2BACFS,GADL,IAEEoG,WAAW,EACXwI,SAAS,EACTzQ,KAAM,KAGV,IAAK,aACH,OAAO,2BACF6B,GADL,IAEEoG,WAAW,EACXwI,SAAS,IAEb,IAAK,gBACH,OAAO,2BACF5O,GADL,IAEEoG,WAAW,EACXwI,SAAS,EACTzQ,KAAMgR,EAAOzP,UAEjB,IAAK,gBACH,OAAO,2BACFM,GADL,IAEEoG,WAAW,EACXwI,SAAS,IAEb,QACE,OAAO5O,MCjBAsP,GAAQC,aACnBN,GACAJ,GAAiBW,aAAgBC,QChBtBC,GAAU,WACrB,OACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,QCENK,IAASC,OAAO,kBAAC,GAAD,MAAaC,SAASC,eAAe,W","file":"static/js/main.b91b3ea4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n  authChekingFinish: \"[auth] Finish checking login state\",\r\n  authLogout: \"[auth] Logout\",\r\n\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  postsAddNew: \"[Posts] New post\",\r\n  postsActive: \"[Posts] Set active posts\", //para saber si la nota esta activa\r\n  postsDesactive: \"[Posts] Set desactive posts\",\r\n  postsLoad: \"[Posts] Load todos los posts\", //para cargar todas las notas\r\n  postFinishLoading: \"[Posts] Finish loading posts\", //para cargar todas las notas\r\n  postNumberPage: \"[Posts] Numero de paginas posts\",\r\n  postsClear: \"[Posts] Limpiar estados\",\r\n  postsLoadUltimosPost: \"[Posts] Carga los ultimos posts\",\r\n  postFinishLoadingPages: \"[Posts] Loading de los post por paginacion\",\r\n  postFinishLoadingSearch: \"[Posts] Loading post Search\",\r\n\r\n  postUpdated: \"[Posts] Update post\",\r\n  stateDelete: \"[Posts] post eliminado correctamente\",\r\n\r\n  notesUpdate: \"[Posts] Update note\",\r\n  notesFileUrl: \"[Posts] Update image url\",\r\n  postDelete: \"[Posts] Delete Post\",\r\n  notesLogoutCleaning: \"[Posts] Logout Cleaning\", //para limpiar todo la informacion de notas dle usuario que este en memoria\r\n  postUpCorrect: \"[POST] msj de post subido correctamente\",\r\n\r\n  resetPagination: \"[Pagination] indicar reinicio de la paginacion\",\r\n};\r\n","//harmeos un fetch con token y otro sin token\r\n\r\n//endpoint : el / que queremos llarmar por ejemplo /auth\r\n//data: la data que enviaremos al backend\r\n//methos: get,post o otro lo dejarmeos por defecto en GET\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  if (method === \"GET\") {\r\n    return fetch(url);\r\n  } else {\r\n    //sino se un get\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  //vamos a leer el token del local storage ya que ahi e guarda cuando hacmeos el login\r\n\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n  if (method === \"GET\") {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"x-token\": token,\r\n      },\r\n    });\r\n  } else {\r\n    //sino se un get\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchConTokenUpload = (endpoint, file) => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  //vamos a leer el token del local storage ya que ahi e guarda cuando hacmeos el login\r\n\r\n  //const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n  const archivo = new FormData();\r\n  archivo.append(\"files\", file[0]);\r\n\r\n  //sino se un get\r\n  return fetch(url, {\r\n    method: \"PUT\",\r\n\r\n    body: archivo,\r\n  });\r\n};\r\n\r\nconst fetchLoginGoogle = (token) => {\r\n  const url = `${baseUrl}/auth/google`;\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      idtoken: token,\r\n    },\r\n  });\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken, fetchLoginGoogle, fetchConTokenUpload };\r\n","import { types } from \"../types/types\";\r\n\r\nimport {\r\n  fetchConToken,\r\n  fetchSinToken,\r\n  fetchLoginGoogle,\r\n} from \"../helpers/fetch\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//acciones para nuestro backend\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\r\n    const body = await resp.json();\r\n\r\n    console.log(body);\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        loginBackend({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginStartGoogle = (idToken) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchLoginGoogle(idToken);\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        loginBackend({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n//funciones para revalidar el token\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken(\"auth/renew\");\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        loginBackend({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      //si el token no es correcto cancelaremos el checkin\r\n      dispatch(checkinFinish());\r\n    }\r\n  };\r\n};\r\n\r\nconst checkinFinish = () => ({\r\n  type: types.authChekingFinish,\r\n});\r\n\r\nconst loginBackend = (user) => ({\r\n  type: types.login,\r\n  payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nconst logout = () => ({\r\n  type: types.authLogout,\r\n});\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\r\n      \"auth/new\",\r\n      { email, password, name },\r\n      \"POST\"\r\n    );\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        loginBackend({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogin, loginStartGoogle } from \"../../action/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"rodrigoRm@gmail.com\",\r\n    password: \"123456\",\r\n  });\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    // dispatch(startLoginEmailPassword(email, password));\r\n    dispatch(startLogin(email, password));\r\n  };\r\n\r\n  //npm i react-google-login\r\n  const responseGoogle = (response) => {\r\n    let id_token = response.tokenId;\r\n\r\n    dispatch(loginStartGoogle(id_token));\r\n\r\n    console.log(id_token);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n          {name && <Redirect to=\"/\" />}\r\n          <h3 className=\"auth__title\">Login</h3>\r\n\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"auth__input\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n\r\n            <div className=\"auth__social-networks\">\r\n              <p>Login with social networks</p>\r\n              <GoogleLogin\r\n                clientId=\"256402099185-6f7anjk52ttgucld44qacbrfv9q0dne1.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={\"single_host_origin\"}\r\n              />\r\n            </div>\r\n\r\n            <Link to=\"/register\" className=\"link\">\r\n              Create new account\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { startRegister } from \"../../action/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeError, setError } from \"../../action/ui\";\r\n\r\nimport validator from \"validator\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector((state) => state.ui);\r\n  const { name: nameLogin } = useSelector((state) => state.auth);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"Hernando\",\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n    password2: \"123456\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      dispatch(startRegister(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError(\"Name is required\"));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Email is not valid\"));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          \"Password should be at least 6 characters and match each other\"\r\n        )\r\n      );\r\n      return false;\r\n    }\r\n\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n          {nameLogin && <Redirect to=\"/\" />}\r\n          <h3 className=\"auth__title\">Register</h3>\r\n\r\n          {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n          <form onSubmit={handleRegister}>\r\n            {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"auth__input\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              name=\"password2\"\r\n              className=\"auth__input\"\r\n              value={password2}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CardApp = ({\r\n  title,\r\n  id,\r\n  descripcion,\r\n  urlImg,\r\n  img,\r\n  urlVideoState,\r\n  user,\r\n  newDate,\r\n}) => {\r\n  //substr(0, 2).toUpperCase()\r\n\r\n  //const handleActive = (id) => {\r\n  //dispatch(StartDetailPosts(id));\r\n  // };\r\n\r\n  return (\r\n    <div id=\"cards_landscape_wrap-2\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div>\r\n            <Link to={`/public/detalle/${id}`}>\r\n              <div className=\"card-flyer\">\r\n                <div className=\"text-box\">\r\n                  <div className=\"image-box\">\r\n                    {!!img ? (\r\n                      <img\r\n                        className=\"card-img-home\"\r\n                        variant=\"top\"\r\n                        src={urlImg}\r\n                        alt={user.name}\r\n                      />\r\n                    ) : (\r\n                      <ReactPlayer\r\n                        className=\"react-player-home\"\r\n                        url={urlVideoState}\r\n                        controls={true}\r\n                      />\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"text-container\">\r\n                    <h6>{title}</h6>\r\n                    <p>{descripcion}</p>\r\n                    <p> {newDate.format(\"MMM Do YY\")}</p>\r\n\r\n                    <p> BY: {user.name}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport momente from \"moment\";\r\n\r\nimport { CardApp } from \"../card-boostrap/CardApp\";\r\nexport const PostEntry = ({\r\n  id,\r\n  name,\r\n  descripcion,\r\n  title,\r\n  date,\r\n  urlVideo,\r\n  urlImg,\r\n  img,\r\n  user,\r\n}) => {\r\n  const newDate = momente(date);\r\n  const [urlVideoState, setUrlVideoState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <>\r\n      <CardApp\r\n        title={title}\r\n        id={id}\r\n        descripcion={descripcion}\r\n        urlImg={urlImg}\r\n        urlVideoState={urlVideoState}\r\n        user={user}\r\n        img={img}\r\n        newDate={newDate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n/// toolbar: [[\"Bold\", \"Italic\", \"Format\", \"Styles\", \"Table\"]],\r\n","import { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport {\r\n  fetchConToken,\r\n  fetchConTokenUpload,\r\n  fetchSinToken,\r\n} from \"../helpers/fetch\";\r\n\r\nconst limitPagination = 4;\r\nexport const eventStartAddNew = (post, fileup) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth; //para obtener la informaicon del redux y ais pasarla la eventAddNew\r\n\r\n    if (post.categoria === \"imagen\") {\r\n      post.categoria = \"5f68d932b1e49a0834c351c7\";\r\n    } else if (post.categoria === \"video\") {\r\n      post.categoria = \"5f6ae33b7da35419289239d4\";\r\n    }\r\n\r\n    try {\r\n      const resp = await fetchConToken(\"posts\", post, \"POST\");\r\n      const body = await resp.json();\r\n\r\n      let bodyUploadImg;\r\n\r\n      console.log(fileup);\r\n\r\n      if (body.ok && fileup) {\r\n        const respUploadImg = await fetchConTokenUpload(\r\n          `upload/posts/${body.post.id}`,\r\n          fileup\r\n        );\r\n\r\n        bodyUploadImg = await respUploadImg.json();\r\n\r\n        post.id = body.post.id; //le agreganmos los campos que le faltan los cuales estan guardados en la bd\r\n        post.user = {\r\n          _id: uid,\r\n          name: name,\r\n          img: bodyUploadImg.img,\r\n        };\r\n      } else if (body.ok) {\r\n        post.id = body.post.id; //le agreganmos los campos que le faltan los cuales estan guardados en la bd\r\n        post.user = {\r\n          _id: uid,\r\n          name: name,\r\n        };\r\n      }\r\n\r\n      //hay un  error\r\n      else {\r\n        let msgError = [];\r\n        //sacamos los mesnjes de error del JSON\r\n        for (var clave in body.errors) {\r\n          //console.log(clave)\r\n\r\n          //console.log(body.errors[clave][\"msg\"]);\r\n          //console.log(json[clave]['titulo']);\r\n          msgError.push(body.errors[clave][\"msg\"]);\r\n        }\r\n\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: msgError[0],\r\n        });\r\n      }\r\n\r\n      const msj = \"Post subido Correctamente\";\r\n      Swal.fire(\"Saved\", body.post.title, \"success\");\r\n      // dispatch(postAddNew(newPost)); no lo utilizaremso ya que al hacer el load de los post de la pagination cargaremos solo 4 y\r\n      //haciendo esta action  cargamos todos los posts\r\n\r\n      dispatch(postAddNew(post));\r\n\r\n      dispatch(PostUp(msj));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n//mostrar post de la BD\r\n\r\nexport const StartLoadingPosts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let respImg;\r\n      let bodyImg;\r\n      const resp = await fetchSinToken(\"posts\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        for (let index = 0; index < body.posts.length; index++) {\r\n          if (body.posts[index].img) {\r\n            respImg = await fetchSinToken(\r\n              `upload/imagen/posts/${body.posts[index].img}`\r\n            );\r\n\r\n            bodyImg = await respImg.url;\r\n\r\n            body.posts[index].urlImg = bodyImg;\r\n          }\r\n        }\r\n      }\r\n\r\n      dispatch(LoadingPosts(body.posts));\r\n      dispatch(checkinFinish());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n//falta probarlo\r\n\r\nexport const StartLoadingPostsSearch = (text = \"\", page) => {\r\n  return async (dispatch) => {\r\n    dispatch(checkinFinishSearch(true));\r\n    try {\r\n      let respImg;\r\n      let bodyImg;\r\n\r\n      let resp;\r\n      let body;\r\n\r\n      if (!text) {\r\n        resp = await fetchSinToken(\r\n          `posts/pagination?page=${page}&limit=${limitPagination}`\r\n        );\r\n        body = await resp.json();\r\n\r\n        if (body.ok) {\r\n          for (let index = 0; index < body.posts.results.length; index++) {\r\n            if (body.posts.results[index].img) {\r\n              respImg = await fetchSinToken(\r\n                `upload/imagen/posts/${body.posts.results[index].img}`\r\n              );\r\n\r\n              bodyImg = await respImg.url;\r\n\r\n              body.posts.results[index].urlImg = bodyImg;\r\n            }\r\n          }\r\n          dispatch(LoadingPosts(body.posts.results));\r\n        }\r\n      } else {\r\n        resp = await fetchSinToken(`posts/search/${text}`);\r\n        body = await resp.json();\r\n\r\n        if (body.ok) {\r\n          for (let index = 0; index < body.posts.length; index++) {\r\n            if (body.posts[index].img) {\r\n              respImg = await fetchSinToken(\r\n                `upload/imagen/posts/${body.posts[index].img}`\r\n              );\r\n\r\n              bodyImg = await respImg.url;\r\n\r\n              body.posts[index].urlImg = bodyImg;\r\n            }\r\n          }\r\n        }\r\n        dispatch(LoadingPosts(body.posts));\r\n      }\r\n      dispatch(checkinFinishSearch(false));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst checkinFinishSearch = (estado) => ({\r\n  type: types.postFinishLoadingSearch,\r\n  payload: estado,\r\n});\r\n\r\nexport const StartLoadingPostsPagination = (page) => {\r\n  return async (dispatch) => {\r\n    dispatch(checkinFinishPagination(true));\r\n    try {\r\n      let respImg;\r\n      let bodyImg;\r\n      const resp = await fetchSinToken(\r\n        `posts/pagination?page=${page}&limit=${limitPagination}`\r\n      );\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        for (let index = 0; index < body.posts.results.length; index++) {\r\n          if (body.posts.results[index].img) {\r\n            respImg = await fetchSinToken(\r\n              `upload/imagen/posts/${body.posts.results[index].img}`\r\n            );\r\n\r\n            bodyImg = await respImg.url;\r\n\r\n            body.posts.results[index].urlImg = bodyImg;\r\n          }\r\n        }\r\n      }\r\n\r\n      dispatch(LoadingPosts(body.posts.results));\r\n      dispatch(checkinFinishPagination(false));\r\n      dispatch(checkinFinish());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst checkinFinishPagination = (estado) => ({\r\n  type: types.postFinishLoadingPages,\r\n  payload: estado,\r\n});\r\nexport const StartLoadingUltimosPosts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      //sacar lso numero de paginas\r\n\r\n      let respImg;\r\n      let bodyImg;\r\n\r\n      const resp = await fetchSinToken(\r\n        `posts/pagination?page=${1}&limit=${limitPagination}`\r\n      );\r\n      const body = await resp.json();\r\n      if (body.ok) {\r\n        for (let index = 0; index < body.posts.results.length; index++) {\r\n          if (body.posts.results[index].img) {\r\n            //condicion de cargar las imagene soslo si existen\r\n            respImg = await fetchSinToken(\r\n              `upload/imagen/posts/${body.posts.results[index].img}`\r\n            );\r\n\r\n            bodyImg = await respImg.url;\r\n\r\n            body.posts.results[index].urlImg = bodyImg;\r\n          }\r\n        }\r\n        dispatch(LoadingUltimosPosts(body.posts.results));\r\n        dispatch(checkinFinish()); //decir que ya esta todo cargado\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const StartLoadingPostsNumberPagination = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchSinToken(\r\n        `posts/pagination?page=${1}&limit=${limitPagination}`\r\n      );\r\n      const body = await resp.json();\r\n      let number;\r\n\r\n      if (body.ok) {\r\n        //calculo para obtneer el numero de paginas utilizadas en la paginacion\r\n        number = body.numberPages / limitPagination;\r\n        number = Math.round(number);\r\n\r\n        //console.log(Math.round(number));\r\n\r\n        dispatch(numMaxPage(number));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst numMaxPage = (number) => ({\r\n  type: types.postNumberPage,\r\n  payload: { number },\r\n});\r\n\r\nexport const StartLoadingPostsByCategoria = async (category) => {\r\n  try {\r\n    //limpiamos el store\r\n    //dispatch(desactivePost());\r\n\r\n    let respImg;\r\n    let bodyImg;\r\n\r\n    const resp = await fetchSinToken(\"posts\");\r\n    const body = await resp.json();\r\n    let postSelec = [];\r\n\r\n    if (body.ok) {\r\n      for (let index = 0; index < body.posts.length; index++) {\r\n        if (body.posts[index].categoria.tipo === category) {\r\n          respImg = await fetchSinToken(\r\n            `upload/imagen/posts/${body.posts[index].img}`\r\n          );\r\n\r\n          bodyImg = await respImg.url;\r\n\r\n          body.posts[index].urlImg = bodyImg;\r\n\r\n          postSelec.push(body.posts[index]);\r\n        }\r\n      }\r\n    }\r\n    //dispatch(LoadingPosts(body.posts));\r\n    //dispatch(checkinFinish());\r\n    //dispatch(activePost(postSelec));\r\n\r\n    return postSelec;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const StartLoadingMyPosts = async (idUser) => {\r\n  try {\r\n    //limpiamos el store\r\n    //dispatch(desactivePost());\r\n\r\n    let respImg;\r\n    let bodyImg;\r\n\r\n    const resp = await fetchSinToken(\"posts\");\r\n    const body = await resp.json();\r\n\r\n    let postSelec = [];\r\n\r\n    if (body.ok) {\r\n      for (let index = 0; index < body.posts.length; index++) {\r\n        if (body.posts[index].user._id === idUser) {\r\n          if (body.posts[index].img) {\r\n            respImg = await fetchSinToken(\r\n              `upload/imagen/posts/${body.posts[index].img}`\r\n            );\r\n            bodyImg = await respImg.url;\r\n\r\n            body.posts[index].urlImg = bodyImg;\r\n          }\r\n\r\n          postSelec.push(body.posts[index]);\r\n        }\r\n      }\r\n    }\r\n    //dispatch(LoadingPosts(body.posts));\r\n    //dispatch(checkinFinish());\r\n    //dispatch(activePost(postSelec));\r\n\r\n    return postSelec;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n//cargar los detalles del post que seleccionemos\r\nexport const StartDetailPosts = async (id) => {\r\n  //return async (dispatch) => {\r\n  try {\r\n    //limpiamos el store\r\n    //dispatch(desactivePost());\r\n    let respImg;\r\n    let bodyImg;\r\n\r\n    let postSelec = [];\r\n    const resp = await fetchSinToken(`posts/search/post/${id}`);\r\n    const body = await resp.json();\r\n\r\n    if (body.ok && !!body.posts.img) {\r\n      respImg = await fetchSinToken(`upload/imagen/posts/${body.posts.img}`);\r\n\r\n      bodyImg = await respImg.url;\r\n\r\n      body.posts.urlImg = bodyImg;\r\n    }\r\n\r\n    //activamos el post selecionado y lo mostramos en la vista DetailPost\r\n\r\n    postSelec.push(body.posts);\r\n\r\n    return postSelec;\r\n    //dispatch(LoadingPosts(p));\r\n    //dispatch(activePost(body.post));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  //};\r\n};\r\n\r\nexport const eventStartUpdate = (post, file) => {\r\n  return async (dispatch) => {\r\n    console.log(post);\r\n\r\n    if (post.categoria === \"imagen\") {\r\n      post.categoria = \"5f68d932b1e49a0834c351c7\";\r\n    } else if (post.categoria === \"video\") {\r\n      post.categoria = \"5f6ae33b7da35419289239d4\";\r\n    }\r\n\r\n    try {\r\n      let bodyUploadImg;\r\n      let bodyDeleteImg;\r\n      if (!!post.idImg) {\r\n        const deleteImg = await fetchSinToken(\r\n          `upload/imagen/posts/${post.idImg}`,\r\n          {},\r\n          \"DELETE\"\r\n        );\r\n\r\n        bodyDeleteImg = await deleteImg.json();\r\n        console.log(bodyDeleteImg);\r\n\r\n        //limpiamos las imagenes del post para luego no guardarla ne la siguiente consulta\r\n        post.img = \"\";\r\n        post.urlImg = \"\";\r\n      }\r\n\r\n      const resp = await fetchConToken(`posts/${post.id}`, post, \"PUT\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        if (file) {\r\n          const respUploadImg = await fetchConTokenUpload(\r\n            `upload/posts/${body.post.id}`,\r\n            file\r\n          );\r\n\r\n          bodyUploadImg = await respUploadImg.json();\r\n\r\n          console.log(bodyUploadImg);\r\n        }\r\n      }\r\n      Swal.fire(\"Saved\", body.msg, \"success\");\r\n\r\n      const msj = \"Post subido Correctamente\";\r\n\r\n      dispatch(PostUp(msj));\r\n\r\n      //const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\r\n      // const body = await resp.json();\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nexport const eventStartDelete = (post, img) => {\r\n  return async (dispatch) => {\r\n    console.log(post, img);\r\n    let bodyDeleteImg;\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        if (!!img) {\r\n          const deleteImg = await fetchSinToken(\r\n            `upload/imagen/posts/${img}`,\r\n            {},\r\n            \"DELETE\"\r\n          );\r\n\r\n          bodyDeleteImg = await deleteImg.json();\r\n          console.log(bodyDeleteImg);\r\n        }\r\n        const resp = await fetchConToken(`posts/${post}`, {}, \"DELETE\");\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n\r\n          const msj = \"Post eliminado Correctamente\";\r\n\r\n          //dispatch(PostUp(msj));\r\n\r\n          dispatch(PostDeleteOkay(msj));\r\n        }\r\n      }\r\n    });\r\n\r\n    try {\r\n      //const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\r\n      // const body = await resp.json();\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\nconst PostDeleteOkay = (id, msj) => ({\r\n  type: types.stateDelete,\r\n  payload: {\r\n    id,\r\n    msj,\r\n  },\r\n});\r\n/*\r\nconst postUpdated = (post) => ({\r\n  type: types.postUpdated,\r\n  payload: post,\r\n});\r\n\r\n*/\r\nexport const activePost = (id, post) => ({\r\n  type: types.postsActive,\r\n  payload: {\r\n    id,\r\n    ...post,\r\n  },\r\n});\r\n\r\nconst checkinFinish = () => ({\r\n  type: types.postFinishLoading,\r\n});\r\n\r\nexport const postAddNew = (newPost) => ({\r\n  type: types.postsAddNew,\r\n  payload: newPost,\r\n});\r\n\r\nconst LoadingPosts = (posts) => ({\r\n  type: types.postsLoad,\r\n  payload: posts,\r\n});\r\n\r\nconst LoadingUltimosPosts = (posts) => ({\r\n  type: types.postsLoadUltimosPost,\r\n  payload: posts,\r\n});\r\n\r\nexport const PostUp = (id, msj) => ({\r\n  type: types.postUpCorrect,\r\n  payload: {\r\n    id,\r\n    msj,\r\n  },\r\n});\r\n\r\nexport const desactivePost = () => ({\r\n  type: types.postsDesactive,\r\n  payload: {},\r\n});\r\n\r\nexport const clearState = () => ({\r\n  type: types.postsClear,\r\n  payload: {},\r\n});\r\n\r\n//accion para guardar la imagen\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    //const { active: activePost } = getState().posts;\r\n\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    const fileUrl = await fileUpload(file);\r\n    console.log(fileUrl);\r\n    Swal.close();\r\n\r\n    return fileUrl;\r\n  };\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n  type: types.postDelete,\r\n  payload: id,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PostEntry } from \"./PostEntry\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Empty } from \"antd\";\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { StartLoadingPostsByCategoria } from \"../../action/post\";\r\n\r\nexport const PostEntrySelect = () => {\r\n  const { categoryid } = useParams();\r\n  const { data, isLoading } = useSelector((state) => state.dataFetch);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const startSelectCategory = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n\r\n      try {\r\n        const results = await StartLoadingPostsByCategoria(categoryid);\r\n\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: results });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    };\r\n    startSelectCategory();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [dispatch, categoryid]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <>\r\n          <div className=\"spinner\">\r\n            <Spinner animation=\"border\" variant=\"info\" />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Row\r\n            className=\"row-card animate__animated animate__fadeIn\"\r\n            gutter={[32, 16]}\r\n            align=\"middle\"\r\n          >\r\n            {data.length > 0 ? (\r\n              <>\r\n                {data.map((post) => (\r\n                  <Col key={post.id} className=\"col-conteiner-post\">\r\n                    <PostEntry {...post} key={post.id} />\r\n                  </Col>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <Col className=\"col-empty\" span={24}>\r\n                <Empty />\r\n              </Col>\r\n            )}\r\n          </Row>\r\n          <Row className=\"row-pagination\" justify=\"center\">\r\n            <Col span={2}></Col>\r\n            <Col span={2}></Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nexport const DetailPostScreen = ({ props }) => {\r\n  const [urlVideoState, setUrlVideoState] = useState(\"\");\r\n\r\n  const { title, urlImg, urlVideo, body } = props;\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        justify=\"space-around\"\r\n        align=\"middle\"\r\n        className=\"row-container animate__animated animate__fadeIn\"\r\n      >\r\n        <Col span={20} className=\"col-detail\">\r\n          <Card\r\n            className=\"text-center card-box-container\"\r\n            bg={\"light\"}\r\n            text={\"dark\"}\r\n            border=\"light\"\r\n          >\r\n            <Card.Header className=\"header-card\">\r\n              <Card.Title className=\"title-card\">{title}</Card.Title>\r\n              {!!urlVideo ? (\r\n                <ReactPlayer\r\n                  className=\"react-player\"\r\n                  url={urlVideoState}\r\n                  controls={true}\r\n                />\r\n              ) : (\r\n                <Card.Img className=\"img-card\" variant=\"top\" src={urlImg} />\r\n              )}\r\n            </Card.Header>\r\n\r\n            <CKEditor\r\n              config={{\r\n                language: \"es\",\r\n                height: \"auto\",\r\n                width: \"100%\",\r\n              }}\r\n              readOnly={true}\r\n              data={body}\r\n            />\r\n          </Card>\r\n\r\n          <footer className=\" footer-card\"></footer>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row></Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { DetailPostScreen } from \"./DetailPostScreen\";\r\nimport { StartDetailPosts } from \"../../action/post\";\r\n\r\nexport const DetailPost = () => {\r\n  const { data, isLoading } = useSelector((state) => state.dataFetch);\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const startDetail = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n\r\n      try {\r\n        const results = await StartDetailPosts(id);\r\n\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: results });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    };\r\n    startDetail();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        {isLoading ? (\r\n          <>\r\n            <div className=\"spinner\">\r\n              <Spinner animation=\"border\" variant=\"info\" />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <DetailPostScreen props={data[0]} />\r\n          </div>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/register/RegisterScreen\";\r\nimport { PostEntrySelect } from \"../components/posted/PostEntrySelect\";\r\nimport { DetailPost } from \"../components/posted/DetailPost\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/public/login\" component={LoginScreen} />\r\n\r\n      <Route exact path=\"/public/register\" component={RegisterScreen} />\r\n\r\n      <Route\r\n        exact\r\n        path=\"/public/category/:categoryid\"\r\n        component={PostEntrySelect}\r\n      />\r\n\r\n      <Route exact path=\"/public/detalle/:id\" component={DetailPost} />\r\n\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventStartAddNew } from \"../../action/post\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nexport const AddPost = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //const [fileupArchivo, setFileupArchivo] = useState(null);\r\n\r\n  //const [category, setCategory] = useState(\"imagen\");\r\n\r\n  const [selection, setSelection] = useState(\"imagen\");\r\n\r\n  const [body, setBody] = useState({\r\n    data: \"\",\r\n  });\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    title: \"\",\r\n    descripcion: \"\",\r\n    urlVideo: \"\",\r\n  });\r\n\r\n  const { title, descripcion, urlVideo } = formValues;\r\n\r\n  const [file, setfile] = useState(false);\r\n\r\n  const onChangeFile = (e) => {\r\n    setfile(e.target.files);\r\n  };\r\n  const handleAddNew = (e) => {\r\n    e.preventDefault();\r\n    let post;\r\n\r\n    if (!!urlVideo) {\r\n      post = {\r\n        title,\r\n        body: body.data,\r\n        descripcion,\r\n        categoria: selection,\r\n        dateCreation: new Date(),\r\n        urlVideo,\r\n      };\r\n    } else {\r\n      post = {\r\n        title,\r\n        body: body.data,\r\n        descripcion,\r\n        dateCreation: new Date(),\r\n        categoria: selection,\r\n      };\r\n    }\r\n\r\n    dispatch(eventStartAddNew(post, file));\r\n\r\n    setfile(false);\r\n  };\r\n\r\n  const handleInputChangeCk = (e) => {\r\n    setBody({\r\n      data: e.editor.getData(),\r\n    });\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setSelection(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post__main animate__animated animate__pulse\">\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={20}>\r\n          <h1 className=\"title-add-post\">New Post</h1>\r\n\r\n          <Form onSubmit={handleAddNew}>\r\n            <Form.Label>Titulo:</Form.Label>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Descripción:</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"2\"\r\n                name=\"descripcion\"\r\n                placeholder=\"descripcion\"\r\n                value={descripcion}\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n              <br />\r\n              <Form.Label>Contenido:</Form.Label>\r\n              <CKEditor data={body.data} onChange={handleInputChangeCk} />\r\n            </Form.Group>\r\n            <Form.Label>Opciones:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              id=\"inlineFormCustomSelect\"\r\n              custom\r\n              onClick={handleSelection}\r\n            >\r\n              <option value=\"imagen\">Imagen</option>\r\n              <option value=\"video\">Video</option>\r\n            </Form.Control>\r\n            <br /> <br />\r\n            {selection === \"imagen\" ? (\r\n              <div>\r\n                <input type=\"file\" id=\"fileUpload\" onChange={onChangeFile} />\r\n              </div>\r\n            ) : (\r\n              <Form.Group controlId=\"formGroupVideo\">\r\n                <Form.Label>Url Video</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"urlVideo\"\r\n                  value={urlVideo}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter url video\"\r\n                />\r\n              </Form.Group>\r\n            )}\r\n            <div className=\"container-button-submit\">\r\n              <button className=\"button-submit\" type=\"submit\">\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { DeleteFilled, SettingFilled } from \"@ant-design/icons\";\r\nimport momente from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activePost, eventStartDelete } from \"../../action/post\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nexport const PostMyEntry = ({\r\n  id,\r\n  body,\r\n  descripcion,\r\n  title,\r\n  date,\r\n  urlVideo,\r\n  urlImg,\r\n  img,\r\n  categoria,\r\n}) => {\r\n  const [urlVideoState, setUrlVideoState] = useState(\"\");\r\n  const newDate = momente(date);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    dispatch(\r\n      activePost(id, {\r\n        date,\r\n        title,\r\n        body,\r\n        urlVideo,\r\n        categoria,\r\n        descripcion,\r\n        img,\r\n        urlImg,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete(id, img));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <Card.Header className=\"header-card\">\r\n        <Card.Title className=\"title-card\">{title}</Card.Title>\r\n        {!!urlVideo ? (\r\n          <ReactPlayer\r\n            className=\"react-detail\"\r\n            url={urlVideoState}\r\n            controls={true}\r\n          />\r\n        ) : (\r\n          <Card.Img className=\"card-img-detail\" variant=\"top\" src={urlImg} />\r\n        )}\r\n      </Card.Header>\r\n\r\n      <Card.Body>\r\n        <CKEditor\r\n          config={{\r\n            language: \"es\",\r\n          }}\r\n          readOnly={true}\r\n          data={body}\r\n        />\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-muted\">\r\n        {newDate.format(\"MMM Do YY\")}\r\n\r\n        <Link\r\n          to=\"/private/editPost\"\r\n          className=\"icon-edit\"\r\n          onClick={handleEntryClick}\r\n        >\r\n          <SettingFilled />\r\n        </Link>\r\n\r\n        <div className=\"icons-list btn-delete\" onClick={handleDelete}>\r\n          <DeleteFilled />\r\n        </div>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PostMyEntry } from \"./PostMyEntry\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { StartLoadingMyPosts } from \"../../action/post\";\r\n\r\nexport const ViewMyPost = () => {\r\n  const { data, isLoading } = useSelector((state) => state.dataFetch);\r\n  const { deletePost } = useSelector((state) => state.posts);\r\n  const { uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n\r\n    const startSelectMyPost = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n\r\n      try {\r\n        const results = await StartLoadingMyPosts(uid);\r\n\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: results });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    };\r\n    startSelectMyPost();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [deletePost, dispatch, uid]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" variant=\"info\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {data.map((post) => (\r\n            <Row\r\n              justify=\"space-around\"\r\n              className=\"animate__animated animate__zoomIn\"\r\n              align=\"middle\"\r\n              key={post.id}\r\n            >\r\n              <Col className=\"col-post-myPost\" key={post.id} span={12}>\r\n                <PostMyEntry {...post} />\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport { eventStartUpdate } from \"../../action/post\";\r\n\r\nexport const EditPost = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [file, setfile] = useState(false);\r\n\r\n  const { active: post } = useSelector((state) => state.posts);\r\n\r\n  const [urlVideo, setUrlVideo] = useState(null);\r\n\r\n  console.log(post);\r\n\r\n  const [formValues, handleInputChange] = useForm(post);\r\n\r\n  const { title, body, descripcion } = formValues;\r\n\r\n  const [selection, setSelection] = useState(post.categoria.tipo);\r\n\r\n  const [bodyPost, setBody] = useState({\r\n    data: body,\r\n  });\r\n  //cada cambio que se le haga a la nota sera actualizado en la nota activa\r\n\r\n  const handleEdit = (e) => {\r\n    let postEdit;\r\n    e.preventDefault();\r\n    if (!!urlVideo) {\r\n      postEdit = {\r\n        id: post.id,\r\n        title,\r\n        body: bodyPost.data,\r\n        descripcion,\r\n        categoria: selection,\r\n        dateCreation: new Date(),\r\n        urlVideo,\r\n        idImg: post.img,\r\n      };\r\n    } else {\r\n      postEdit = {\r\n        id: post.id,\r\n        title,\r\n        body: bodyPost.data,\r\n        descripcion,\r\n        dateCreation: new Date(),\r\n        categoria: selection,\r\n        urlVideo,\r\n        idImg: post.img,\r\n      };\r\n    }\r\n\r\n    dispatch(eventStartUpdate(postEdit, file));\r\n  };\r\n\r\n  const handleInputChangeCk = (e) => {\r\n    setBody({\r\n      data: e.editor.getData(),\r\n    });\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setSelection(e.target.value);\r\n  };\r\n\r\n  const onChangeFile = (e) => {\r\n    setfile(e.target.files);\r\n  };\r\n\r\n  const onChangeurlVideo = (e) => {\r\n    setUrlVideo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"animate__animated animate__fadeIn\">\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={20}>\r\n          <h1>EditPost</h1>\r\n          <Form onSubmit={handleEdit}>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Descripción</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                name=\"descripcion\"\r\n                value={descripcion}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <CKEditor\r\n              config={{\r\n                language: \"es\",\r\n              }}\r\n              onChange={handleInputChangeCk}\r\n              data={bodyPost.data}\r\n            />\r\n            <Form.Label>Opciones:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              id=\"inlineFormCustomSelect\"\r\n              custom\r\n              onClick={handleSelection}\r\n            >\r\n              <option value=\"imagen\">Imagen</option>\r\n              <option value=\"video\">Video</option>\r\n            </Form.Control>\r\n            <br /> <br />\r\n            {selection === \"imagen\" ? (\r\n              <input type=\"file\" id=\"fileUpload\" onChange={onChangeFile} />\r\n            ) : (\r\n              <Form.Group controlId=\"formGroupVideo\">\r\n                <Form.Label>Url Video</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"urlVideo\"\r\n                  value={urlVideo}\r\n                  onChange={onChangeurlVideo}\r\n                  placeholder=\"Enter url video\"\r\n                />\r\n              </Form.Group>\r\n            )}\r\n            <button type=\"submit\">Guardar</button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AddPost } from \"../components/posted/AddPost\";\r\nimport { ViewMyPost } from \"../components/posted/ViewMyPost\";\r\nimport { EditPost } from \"../components/posted/EditPost\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const DashboardRoutePrivate = () => {\r\n  // <Route exact path=\"/private/editPost\" component={EditPost} />\r\n  const { active, ok } = useSelector((state) => state.posts);\r\n  return (\r\n    <Switch>\r\n      {ok ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <Route exact path=\"/private/subirPost\" component={AddPost} />\r\n      )}\r\n\r\n      <Route exact path=\"/private/viewPost\" component={ViewMyPost} />\r\n\r\n      {active ? (\r\n        <Route exact path=\"/private/editPost\" component={EditPost} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/public/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticate, //saber si esta autenticaado\r\n  component: Component, //el compoenente que la persona quiere renderizar\r\n  ...rest // resto de los elementos, el exact, path etc\r\n}) => {\r\n  //si esta utenticado tiene acceso al componente y mada todo sino lo redirecciona al login\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={\r\n        (props) =>\r\n          isAuthenticate ? <Redirect to=\"/\" /> : <Component {...props} />\r\n        //si esta autenticado, no es objetivo de una ruta publica y lo mando al /, caso contrario msi quiere acceder\r\n        //a una ruita publica lo dejo pasar, es decir si queremos volver al login siendo que ya estamos autenticados nos\r\n        //sacara\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.prototype = {\r\n  isAuthenticate: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const CarouselsApp = () => {\r\n  const { ultimosPost: posts } = useSelector((state) => state.posts);\r\n\r\n  return (\r\n    <>\r\n      <Carousel className=\"carousels-app\">\r\n        {posts.map((post) => (\r\n          <Carousel.Item key={post.id}>\r\n            {post.urlImg ? (\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src={post.urlImg}\r\n                alt=\"First slide\"\r\n              />\r\n            ) : (\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\"\r\n                alt=\"First slide\"\r\n              />\r\n            )}\r\n\r\n            <Carousel.Caption>\r\n              <h3>{post.title}</h3>\r\n              <p>{post.descripcion}</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PostEntry } from \"./PostEntry\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Row, Col, Pagination, Input } from \"antd\";\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { CarouselsApp } from \"../carousels/CarouselsApp\";\r\nimport {\r\n  desactivePost,\r\n  StartLoadingPostsNumberPagination,\r\n  StartLoadingPostsSearch,\r\n  StartLoadingUltimosPosts,\r\n} from \"../../action/post\";\r\nimport { StartLoadingPostsPagination } from \"../../action/post\";\r\nexport const PostedEntries = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    posts,\r\n    pages,\r\n    loadingPostPagination,\r\n    loadingPostSearch,\r\n  } = useSelector((state) => state.posts);\r\n  const [pagination, setPagination] = useState(1);\r\n\r\n  //  const [search, setSearch] = useState(\"\");\r\n\r\n  //const [loading, setLoading] = useState(true);\r\n\r\n  //cada vez que entremos al home limpiamos el post seleccionado y la data de los loading para volver a cargar todo\r\n  useEffect(() => {\r\n    dispatch(desactivePost());\r\n    dispatch({ type: \"FETCH_CLEAR\" });\r\n    //cada vez que se entr a una categoria este reducer se llena de informacion aca se limpia\r\n    //esta es la entrada prncipal\r\n\r\n    dispatch(StartLoadingPostsNumberPagination());\r\n    dispatch(StartLoadingUltimosPosts());\r\n\r\n    dispatch(StartLoadingPostsPagination(pagination));\r\n  }, [dispatch, pagination]);\r\n\r\n  const onChange = (e) => {\r\n    setPagination(e); //pagina actual\r\n  };\r\n\r\n  console.log(\"hola2\");\r\n\r\n  const handleSearch = (e) => {\r\n    console.log(e.target.value);\r\n\r\n    dispatch(StartLoadingPostsSearch(e.target.value, pagination));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingPostPagination ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" variant=\"info\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Row gutter={[8, 8]} align=\"middle\">\r\n            <Col span={24}>\r\n              <CarouselsApp />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col span={12} offset={6} className=\"search\">\r\n              <Input placeholder=\"Search...\" onChange={handleSearch} />\r\n            </Col>\r\n          </Row>\r\n\r\n          {loadingPostSearch ? (\r\n            <div className=\"spinner\">\r\n              <Spinner animation=\"border\" variant=\"info\" />\r\n            </div>\r\n          ) : (\r\n            <Row\r\n              gutter={[48, 40]}\r\n              align=\"middle\"\r\n              className=\"conteiner-post animate__animated animate__fadeIn\"\r\n            >\r\n              {posts.map((post) => (\r\n                <Col key={post.id} className=\"col-conteiner-post\">\r\n                  <PostEntry {...post} key={post.id} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          )}\r\n\r\n          <Row className=\"row-pagination\" justify=\"center\">\r\n            <Col span={8} className=\"col-pagination\">\r\n              <Pagination\r\n                onChange={onChange}\r\n                defaultCurrent={1}\r\n                total={pages.number}\r\n                current={pagination}\r\n                defaultPageSize={1}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nexport default function FooterApp() {\r\n  const { Footer } = Layout;\r\n\r\n  return (\r\n    <Footer className=\"footer\">\r\n      <p>Rodrigo Ramirez Mendez</p>\r\n      <p>Desarrollado con : MongoDB-Express-React-NodeJS</p>\r\n    </Footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  HomeOutlined,\r\n  VideoCameraOutlined,\r\n  CameraOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { startLogout } from \"../../action/auth\";\r\n\r\nexport const MenuPosted = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const { SubMenu } = Menu;\r\n  const { Header } = Layout;\r\n\r\n  const hanleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"video\" icon={<VideoCameraOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/public/category/video\">\r\n            Videos\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"imagen\" icon={<CameraOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/public/category/imagen\">\r\n            Imagenes\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        {name ? (\r\n          <SubMenu\r\n            key=\"user\"\r\n            icon={<UserOutlined />}\r\n            title={name}\r\n            className=\"sub-menu-user\"\r\n          >\r\n            <Menu.Item key=\"addPost\">\r\n              <NavLink activeClassName=\"active\" exact to=\"/private/subirPost\">\r\n                Subir Post\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"viewPost\">\r\n              <NavLink activeClassName=\"active\" exact to=\"/private/viewPost\">\r\n                Ver Post\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"logout\" onClick={hanleLogout}>\r\n              Logout\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key=\"login\" className=\"sub-menu-user\">\r\n            <Link to=\"/public/login\" className=\"link\">\r\n              Login\r\n            </Link>\r\n          </Menu.Item>\r\n        )}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { DashboardRoutePrivate } from \"./DashboardRoutePrivate\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startChecking } from \"../action/auth\";\r\nimport { PostedEntries } from \"../components/posted/PostedEntries\";\r\nimport { Layout } from \"antd\";\r\nimport FooterApp from \"../components/footer/FooterApp\";\r\nimport { MenuPosted } from \"../components/topMenu/MenuPosted\";\r\nimport { clearState } from \"../action/post\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const AppRouter = () => {\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n  const { checking: checkingLoadPosts, ok, deletePost } = useSelector(\r\n    (state) => state.posts\r\n  );\r\n  const dispatch = useDispatch();\r\n  console.log(\"appRouter\");\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking()); //chekear si el usuario ha cargado\r\n\r\n    dispatch(clearState());\r\n    //dispatch(StartLoadingPosts());\r\n    //dispatch(StartLoadingPostsPagination(pagination));\r\n  }, [dispatch, ok, deletePost]);\r\n\r\n  if (checking && checkingLoadPosts) {\r\n    //temrinara der cargar una vez que el usuario y el post esten cargados\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Router>\r\n        <MenuPosted />\r\n\r\n        <Content className=\"content-app animate__animated animate__fadeIn\">\r\n          <div className=\"site-layout-content\">\r\n            <Switch>\r\n              <PrivateRoute\r\n                isAuthenticated={!!uid}\r\n                path=\"/private\"\r\n                component={DashboardRoutePrivate}\r\n              />\r\n              <PublicRoute\r\n                path=\"/public\"\r\n                component={AuthRouter}\r\n                isAuthenticated={!!uid}\r\n              />\r\n              <Route exact path=\"/\" component={PostedEntries} />\r\n            </Switch>\r\n          </div>\r\n        </Content>\r\n\r\n        <FooterApp />\r\n      </Router>\r\n    </Layout>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  checking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n        ...action.payload,\r\n      };\r\n\r\n    case types.authChekingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authLogout:\r\n      return {\r\n        checking: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  ultimosPost: [],\r\n  active: null,\r\n  ok: null,\r\n  checking: true,\r\n  deletePost: null,\r\n  loadingPostPagination: true,\r\n  loadingPostSearch: false,\r\n  pages: 0,\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.postsActive:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: {\r\n          ...action.payload, // sacamos todo lo que nos entrego el action\r\n        },\r\n      };\r\n\r\n    case types.postFinishLoadingPages:\r\n      return {\r\n        ...state,\r\n        loadingPostPagination: action.payload,\r\n      };\r\n\r\n    case types.postFinishLoadingSearch:\r\n      return {\r\n        ...state,\r\n        loadingPostSearch: action.payload,\r\n      };\r\n\r\n    case types.postsAddNew:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n      };\r\n\r\n    case types.postsDesactive:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: null,\r\n      };\r\n\r\n    case types.postsClear:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: null,\r\n        deletePost: null,\r\n      };\r\n\r\n    case types.postUpCorrect:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case types.postsLoad:\r\n      return {\r\n        ...state,\r\n        posts: [...action.payload], //las notas vienen en un action que es un arreglo\r\n      };\r\n    case types.postsLoadUltimosPost:\r\n      return {\r\n        ...state,\r\n        ultimosPost: [...action.payload], //las notas vienen en un action que es un arreglo\r\n      };\r\n\r\n    case types.postFinishLoading:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.postNumberPage:\r\n      return {\r\n        ...state,\r\n        pages: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case types.postUpdated:\r\n      return {\r\n        ...state,\r\n        //vamos actualizar un evento,utilizando el map\r\n        posts: state.post.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      };\r\n\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null, //desmarcamos la nota que estamo borrando sandnola d ela snotas activas\r\n        posts: state.posts.filter((post) => post.id !== action.payload), //devolvemos todas las nota menos la que borramos\r\n      };\r\n\r\n    case types.stateDelete:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        deletePost: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  isLoading: true,\r\n  isError: false,\r\n  data: [],\r\n};\r\n\r\nexport const dataFetchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_CLEAR\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n        data: [],\r\n      };\r\n\r\n    case \"FETCH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload,\r\n      };\r\n    case \"FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { dataFetchReducer } from \"../reducers/dataFetchReducer\";\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  posts: postReducer,\r\n  dataFetch: dataFetchReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const PostApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/styles.scss\";\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { PostApp } from \"./PostApp\";\nReactDOM.render(<PostApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}